{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Navbar/Navbar.module.scss","App.module.scss","components/Header/Header.module.scss","components/Profile/Profile.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","redux/state.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","rerenderEntireTree","console","log","state","profilePage","posts","id","v1","post","likesCount","postText","messagesPage","dialogs","name","messages","message","addPost","newPost","push","changePostText","DialogItem","props","path","className","s","dialog","to","activeClassName","dialogActive","Message","Dialogs","dialogsElements","map","d","messagesElements","m","dialogsItems","dialogsMessages","Header","header","headerItem","Navbar","navbar","navbarItem","navbarItemActive","Post","postItems","postItemImg","postItemAvatar","src","postItemPost","postItemLikes","MyPosts","postsElements","postRef","createRef","useState","error","setError","textError","current","value","trim","myPosts","myPostsTitle","myPostsTextArea","placeholder","ref","onChange","onKeyPress","e","key","onClick","addPostButton","myPostsElements","ProfileInfo","profileInfo","Profile","profile","App","app","appContent","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a70557e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"dialog\":\"Dialogs_dialog__3WNZB\",\"dialogActive\":\"Dialogs_dialogActive__EYK3R\",\"dialogsMessages\":\"Dialogs_dialogsMessages__1vjY3\",\"message\":\"Dialogs_message__3-b-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1jere\",\"postItems\":\"Post_postItems__1__LT\",\"postItemImg\":\"Post_postItemImg__1gmAB\",\"postItemAvatar\":\"Post_postItemAvatar__CaiyC\",\"postItemPost\":\"Post_postItemPost__2wFwD\",\"postItemLikes\":\"Post_postItemLikes__vb83m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2AZpm\",\"myPostsTitle\":\"MyPosts_myPostsTitle__1-J3u\",\"myPostsTextArea\":\"MyPosts_myPostsTextArea__LEHZk\",\"myPostsElements\":\"MyPosts_myPostsElements__35Ooe\",\"error\":\"MyPosts_error__8ySYA\",\"addPostButton\":\"MyPosts_addPostButton__P_vJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__10UeP\",\"navbarItem\":\"Navbar_navbarItem__378gu\",\"navbarItemActive\":\"Navbar_navbarItemActive__yMcQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"appContent\":\"App_appContent__1pITD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"headerItem\":\"Header_headerItem__2zQxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__15I9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__14aF3\"};","import {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\nimport {v1} from \"uuid\";\nimport {MessageType} from \"../components/Dialogs/Message/Message\";\nimport {PostType} from \"../components/Profile/MyPosts/Post/Post\";\nlet rerenderEntireTree = () => {\n    console.log('State changed')\n}\nexport type StateType = {\n    profilePage: {\n        posts: Array<PostType>\n        postText: string\n    }\n    messagesPage: {\n        messages: Array<MessageType>\n        dialogs: Array<DialogItemType>\n    }\n}\n\nexport const state: StateType = {\n    profilePage: {\n        posts: [\n            {id: v1(), post: 'Hello!', likesCount: 3},\n            {id: v1(), post: 'JS!', likesCount: 9}\n        ],\n        postText: ''\n    },\n    messagesPage: {\n        dialogs: [\n            {id: v1(), name: 'Alexander'},\n            {id: v1(), name: 'Alena'}\n        ],\n        messages: [\n            {id: v1(), message: 'Hello!'},\n            {id: v1(), message: 'How are you?'}\n        ]\n    }\n}\n\nexport const addPost = () => {\n    const newPost: PostType = {id: v1(), post: state.profilePage.postText, likesCount: 0}\n    state.profilePage.posts.push(newPost)\n    state.profilePage.postText = ''\n    rerenderEntireTree()\n}\n\nexport const changePostText = (postText: string) => {\n    state.profilePage.postText = postText\n    rerenderEntireTree()\n}\n\nexport const subscribe = (observer: () => void) => {\n    rerenderEntireTree = observer\n}\n","import s from \"../Dialogs.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nexport type DialogItemType = {\n    id: string\n    name: string\n}\nexport const DialogItem = (props: DialogItemType) => {\n    let path = `/dialogs/${props.id}`\n\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path} activeClassName={s.dialogActive}>{props.name}</NavLink>\n        </div>\n    )\n}","import s from \"../Dialogs.module.scss\";\nimport React from \"react\";\n\nexport type MessageType = {\n    id: string\n    message: string\n}\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}","import React from 'react'\nimport s from './Dialogs.module.scss'\nimport {DialogItem, DialogItemType} from \"./DialogItem/DialogItem\";\nimport {Message, MessageType} from \"./Message/Message\";\n\ntype DialogsType = {\n    messagesPage: {\n        messages: Array<MessageType>\n        dialogs: Array<DialogItemType>\n    }\n}\n\nfunction Dialogs(props: DialogsType) {\n\n    const dialogsElements = props.messagesPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n    const messagesElements = props.messagesPage.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.dialogsMessages}>\n                {messagesElements}\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs","import s from './Header.module.scss'\nimport React from \"react\";\n\nexport function Header() {\n    const logo: string = 'SOCIAL NETWORK'\n    return (\n        <header className={s.header}>\n            <div className={s.headerItem}>\n                <span>{logo}</span>\n            </div>\n        </header>\n    )\n}","import s from './Navbar.module.scss'\nimport React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.navbar}>\n            <div className={s.navbarItem}>\n               <NavLink to='/profile' activeClassName={s.navbarItemActive}>Profile</NavLink>\n            </div>\n            <div className={s.navbarItem}>\n                <NavLink to='/dialogs' activeClassName={s.navbarItemActive}>Messages</NavLink>\n            </div>\n        </nav>\n    )\n}","import s from './Post.module.scss'\n\nexport type PostType = {\n    id: string\n    post: string\n    likesCount: number\n}\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.post}>\n            <div className={s.postItems}>\n                <div className={s.postItemImg}>\n                    <img className={s.postItemAvatar} src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\"/>\n                </div>\n                <div className={s.postItemPost}>\n                    <span>{props.post}</span>\n                </div>\n                <div className={s.postItemLikes}>\n                    <span>Likes: {props.likesCount}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import Post, {PostType} from \"./Post/Post\";\nimport s from './MyPosts.module.scss'\nimport {useState, KeyboardEvent, createRef} from \"react\";\n\ntype MyPostType = {\n    posts: Array<PostType>\n    addPost: () => void\n    postText: string\n    changePostText: (postText: string) => void\n}\n\nfunction MyPosts(props: MyPostType) {\n    const postsElements = props.posts.map(m => <Post key={m.id} id={m.id} post={m.post} likesCount={m.likesCount}/>)\n    const postRef = createRef<HTMLTextAreaElement>()\n    const [error, setError] = useState<boolean>(false)\n    const textError = error ? s.error : ''\n    const onPostChange = () => {\n\n        if (postRef.current) {\n            const postText = postRef.current.value\n            props.changePostText(postText)\n            setError(false)\n        }\n    }\n    const addPost = () => {\n        if (postRef.current) {\n            const postText = postRef.current.value\n            if(postText.trim()) {\n                props.addPost()\n            } else {\n                setError(true)\n            }\n        }\n    }\n    const onKeyPressAddPost = (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            addPost()\n        }\n    }\n    return (\n        <div className={s.myPosts}>\n            <div className={s.myPostsTitle}>\n                <h3>My posts</h3>\n            </div>\n            <div className={s.myPostsTextArea}>\n                <div>\n                    <textarea\n                        placeholder={\"What's new?\"}\n                        ref={postRef}\n                        value={props.postText}\n                        onChange={onPostChange}\n                        onKeyPress={onKeyPressAddPost}\n                        className={textError}/>\n                </div>\n                <div>\n                    <button onClick={addPost} className={s.addPostButton}>Add post</button>\n                </div>\n            </div>\n            <div className={s.myPostsElements}>\n                {postsElements}\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default MyPosts","import React from \"react\";\nimport s from './ProfileInfo.module.scss'\n\nfunction ProfileInfo() {\n    return (\n        <div className={s.profileInfo}>\n            Ava + Description\n        </div>\n    )\n}\n\nexport default ProfileInfo","import s from './Profile.module.scss'\nimport React from \"react\";\nimport MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport {PostType} from \"./MyPosts/Post/Post\";\n\ntype ProfileType = {\n    profilePage: {\n        posts: Array<PostType>\n        postText: string\n    }\n    addPost: () => void\n    changePostText: (postText: string) => void\n}\n\nexport function Profile(props: ProfileType) {\n    return (\n        <div className={s.profile}>\n            <ProfileInfo/>\n            <MyPosts posts={props.profilePage.posts} postText={props.profilePage.postText} addPost={props.addPost}\n                     changePostText={props.changePostText}/>\n        </div>\n    )\n}","import React from 'react'\nimport './App.module.scss'\nimport s from './App.module.scss'\nimport Dialogs from './components/Dialogs/Dialogs';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Route} from \"react-router-dom\";\nimport {StateType} from \"./redux/state\";\n\ntype AppType = {\n    state: StateType\n    addPost: () => void\n    changePostText: (postText: string) => void\n}\n\nfunction App(props: AppType) {\n    return (\n        \n        <div className={s.app}>\n            <Header/>\n            <Navbar/>\n            <div className={s.appContent}>\n                <Route path='/profile'\n                       render={() => <Profile profilePage={props.state.profilePage} addPost={props.addPost}\n                                              changePostText={props.changePostText}/>}/>\n                <Route path='/dialogs'\n                       render={() => <Dialogs messagesPage={props.state.messagesPage}/>}/>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './index.scss'\nimport {state, subscribe} from \"./redux/state\";\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {addPost, changePostText} from './redux/state'\n\nconst rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state} addPost={addPost} changePostText={changePostText}/>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree()\nsubscribe(rerenderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}