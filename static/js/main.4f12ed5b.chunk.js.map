{"version":3,"sources":["app/App.module.scss","features/Profile/MyPosts/Post/Post.module.scss","features/Profile/About/About.module.scss","features/Profile/MyPosts/MyPostsForm/MyPostsForm.module.scss","features/Login/Login.module.scss","api/profile-api.ts","app/app-reducer.ts","utils/error-utils.ts","features/Profile/profile-reducer.ts","api/users-api.ts","features/Users/users-reducer.ts","api/auth-api.ts","features/Login/auth-reducer.ts","app/redux-store.ts","features/Header/Header.tsx","features/Users/User/User.tsx","features/Users/UsersSearchForm/UsersSearchForm.tsx","features/Users/Users.tsx","features/Navbar/Navbar.tsx","features/Profile/About/About.tsx","features/Profile/MyPosts/Post/Post.tsx","features/Profile/MyPosts/MyPostsForm/MyPostsForm.tsx","features/Profile/MyPosts/MyPosts.tsx","features/Profile/ProfileStatus/ProfileStatus.tsx","assets/images/bgnode.jpg","features/Profile/Profile.tsx","features/Main/Main.tsx","components/ErrorSnackbar/ErrorSnackbar.tsx","features/Login/LoginForm/LoginForm.tsx","features/Login/Login.tsx","app/App.tsx","reportWebVitals.ts","index.tsx","features/Profile/Profile.module.scss","features/Users/UsersSearchForm/UsersSearchForm.module.scss","features/Header/Header.module.scss","features/Users/User/User.module.scss","features/Profile/ProfileStatus/ProfileStatus.module.scss","features/Users/Users.module.scss","features/Navbar/Navbar.module.scss","features/Profile/MyPosts/MyPosts.module.scss","features/Main/Main.module.scss","features/Login/LoginForm/LoginForm.module.scss"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","profileAPI","paramsUserID","get","userId","status","put","initialState","appStatus","error","initialization","setAppError","type","setAppStatus","setAppInitialization","value","handleServerAppError","data","dispatch","messages","length","handleServerNetworkError","e","message","posts","id","v1","post","likesCount","profile","setStatusProfile","usersAPI","currentPage","pageSize","filter","term","friend","then","response","userID","delete","usersList","totalUsersCount","isFetching","isFollowing","disableButton","setFilter","payload","toggleIsFollowing","toggleIsFetching","setCurrentPage","getUsersTC","page","a","res","users","items","totalCount","authAPI","email","password","rememberMe","login","fieldsErrors","resultCode","isAuth","setAuthUserData","getAuthUserDataTC","rootReducer","combineReducers","profilePage","state","action","newPost","postText","usersPage","map","u","followed","auth","app","store","createStore","applyMiddleware","thunkMiddleware","console","log","window","Header","React","useDispatch","useSelector","logoutHandler","className","s","header","container","title","sx","fontSize","color","loginInfo","logoutBtn","onClick","disabled","User","memo","followUserHandler","unfollowUserHandler","mappedUsers","Grid","item","xs","user","to","Avatar","alt","name","src","photos","small","width","height","unfollowBtn","some","followBtn","spacing","validationSchema","Yup","max","UsersSearchForm","onFilterChanged","initialValues","onSubmit","values","setSubmitting","isSubmitting","searchForm","inputBlock","placeholder","searchBtn","icon","selectBlock","select","as","Users","useEffect","changeCurrentPage","useCallback","followUserTC","unfollowUserTC","pagesCount","Math","ceil","searchBlock","CircularProgress","style","marginTop","marginBottom","pagination","Pagination","count","onChange","Navbar","navbar","isActive","active","About","aboutMe","aboutBlock","Post","props","postHeader","avatar","MyPostsForm","addPostHandler","myPostsForm","IconButton","margin","PostAdd","component","MyPosts","postsElements","m","trim","myPosts","postForm","allPosts","ProfileStatus","useState","editMode","setEditMode","localStatus","setLocalStatus","offEditMode","updateStatusProfileTC","profileStatus","input","currentTarget","autoFocus","onFocus","event","onBlur","onKeyPress","key","span","noStatus","HeadImg","styled","div","img","Profile","authUserId","useParams","setStatusProfileTC","profileHeader","large","imag","headInfo","fullName","border","position","top","left","info","profileContent","about","Main","main","nav","content","path","element","Alert","ref","elevation","variant","ErrorSnackbar","isOpen","handleClose","reason","Snackbar","open","autoHideDuration","onClose","anchorOrigin","horizontal","vertical","severity","required","min","matches","LoginForm","loginHandler","loginTC","loginForm","remember","htmlFor","loginBtn","Login","App","appInitialization","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f12ed5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__10dw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2prcS\",\"postHeader\":\"Post_postHeader__13KaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutBlock\":\"About_aboutBlock__2WwFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsForm\":\"MyPostsForm_myPostsForm__2-JJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__ylczG\"};","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n    },\n})\n\nexport const profileAPI = {\n    getProfile(paramsUserID: string | undefined) {\n        return instance.get<ProfileType>(`profile/${paramsUserID}`)\n    },\n    getStatus(userId: string | undefined) {\n        return instance.get<string>(`profile/status/${userId}`)\n    },\n    updateStatus(status: string) {\n        return instance.put<UpdateStatusType>(`profile/status`, {status})\n    }\n\n}\n\ntype UpdateStatusType = {\n    data: {}\n    messages: Array<string>\n    fieldsErrors: Array<string>\n    resultCode: number\n}\n\nexport type ProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: string\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: string\n        github: string\n        mainLink: string\n    },\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: {\n        small: string\n        large: string\n    }\n}","export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type AppErrorType = string | null\n\n\nconst initialState = {\n    appStatus: \"idle\" as RequestStatusType,\n    error: null as AppErrorType,\n    initialization: false as boolean\n}\n\ntype AppInitialStateType = typeof initialState\n\nexport const appReducer = (state = initialState, action: AppReducerActionsType): AppInitialStateType => {\n    switch (action.type) {\n        case 'APP/SET-STATUS':\n            return {...state, appStatus: action.status}\n        case 'APP/SET-ERROR':\n            return {...state, error: action.error}\n        case 'APP/SET-INITIALIZATION':\n            return {...state, initialization: action.value}\n        default:\n            return state\n    }\n}\n\n// AC\n\nexport type AppReducerActionsType = ChangeAppStatusType | SetAppErrorType | ReturnType<typeof setAppInitialization>\nexport type ChangeAppStatusType = ReturnType<typeof setAppStatus>\nexport type SetAppErrorType = ReturnType<typeof setAppError>\n\nexport const setAppError = (error: AppErrorType) => {\n    return {type: 'APP/SET-ERROR', error} as const\n}\nexport const setAppStatus = (status: RequestStatusType) => {\n    return {type: 'APP/SET-STATUS', status} as const\n}\nexport const setAppInitialization = (value: boolean) => {\n    return {type: 'APP/SET-INITIALIZATION', value} as const\n}\n\n\n","import { Dispatch } from \"@reduxjs/toolkit\"\nimport {ChangeAppStatusType, setAppError, SetAppErrorType, setAppStatus} from \"../app/app-reducer\";\nimport {ResponseType} from \"../api/auth-api\";\n\nexport const handleServerAppError = <T>(data: ResponseType<T>, dispatch: ErrorUtilsDispatchType) => {\n    if (data.messages.length) {\n        dispatch(setAppError(data.messages[0]))\n    } else {\n        dispatch(setAppError('Some error occurred'))\n    }\n    dispatch(setAppStatus('failed'))\n}\n\nexport const handleServerNetworkError = (e: {message: string}, dispatch: ErrorUtilsDispatchType) => {\n    dispatch(setAppError(e.message))\n    dispatch(setAppStatus('failed'))\n}\n\ntype ErrorUtilsDispatchType = Dispatch<ChangeAppStatusType | SetAppErrorType>","import {v1} from \"uuid\";\nimport {profileAPI, ProfileType} from \"../../api/profile-api\";\nimport {ThunkType} from \"../../app/redux-store\";\nimport {setAppStatus} from \"../../app/app-reducer\";\nimport {handleServerAppError, handleServerNetworkError} from \"../../utils/error-utils\";\n\nexport type PostType = {id: string, post: string, likesCount: number}\n\nexport type ProfileDomainType = {\n    profile: ProfileType | null\n    posts: Array<PostType>\n    status: string\n}\n\nconst initialState: ProfileDomainType = {\n    posts: [\n        {id: v1(), post: 'Hello!', likesCount: 3},\n        {id: v1(), post: 'JS!', likesCount: 9},\n    ],\n    profile: null,\n    status: '',\n}\n\n\nexport const profileReducer = (state = initialState, action: ProfileActionsType): ProfileDomainType => {\n    switch (action.type) {\n        case 'ADD-POST':\n            const newPost: PostType = {id: action.id, post: action.postText, likesCount: 0}\n            return {...state, posts: [newPost, ...state.posts]}\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n        case \"SET-STATUS-PROFILE\":\n            return {...state, status: action.status}\n        default:\n            return state\n    }\n}\n\n\n// AC\n\nexport type ProfileActionsType =\n    ReturnType<typeof addPost>\n    | ReturnType<typeof setUserProfile>\n    | ReturnType<typeof setStatusProfile>\n\nexport const setStatusProfile = (status: string) => {\n    return {type: 'SET-STATUS-PROFILE', status} as const\n}\nexport const setUserProfile = (profile: ProfileType) => {\n    return {type: 'SET-USER-PROFILE', profile} as const\n}\nexport const addPost = (postText: string) => {\n    return {type: 'ADD-POST', postText, id: v1()} as const\n}\n\n// Thunk\n\nexport const setUserProfileTC = (paramsUserID: string | undefined): ThunkType => async dispatch => {\n    dispatch(setAppStatus('loading'))\n    try {\n        const res = await profileAPI.getProfile(paramsUserID)\n        dispatch(setUserProfile(res.data))\n        dispatch(setAppStatus('succeeded'))\n    } catch (e) {\n        handleServerNetworkError((e as Error), dispatch)\n    }\n}\nexport const setStatusProfileTC = (paramsUserID: string | undefined): ThunkType => async dispatch => {\n    dispatch(setAppStatus('loading'))\n    try {\n        const res = await profileAPI.getStatus(paramsUserID)\n        dispatch(setStatusProfile(res.data))\n        dispatch(setAppStatus('succeeded'))\n    } catch (e) {\n        handleServerNetworkError((e as Error), dispatch)\n    }\n\n}\nexport const updateStatusProfileTC = (status: string): ThunkType => async dispatch => {\n    dispatch(setAppStatus('loading'))\n    try {\n        const res = await profileAPI.updateStatus(status)\n        if (res.data.resultCode === 0) {\n            dispatch(setStatusProfile(status))\n            dispatch(setAppStatus('succeeded'))\n        } else {\n            handleServerAppError(res.data, dispatch)\n        }\n    } catch (e) {\n        handleServerNetworkError((e as Error), dispatch)\n    }\n}","import axios from \"axios\";\nimport { FilterType } from \"../features/Users/users-reducer\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n    },\n})\n\nexport const usersAPI = {\n    getUsers(currentPage: number = 1, pageSize: number = 10, filter: FilterType = {term: '', friend: null}) {\n        return instance.get<GetUserType>(`users?page=${currentPage}&count=${pageSize}&term=${filter.term}`\n            + (filter.friend === null ? '' : `&friend=${filter.friend}`))\n            .then(response => {\n                return response.data\n            })\n    },\n    followUser(userID: number) {\n        return instance.post<PostAndDeleteFollowType>(`follow/${userID}`)\n    },\n    unfollowUser(userID: number) {\n        return instance.delete<PostAndDeleteFollowType>(`follow/${userID}`)\n    },\n}\n\ntype PostAndDeleteFollowType = {\n    data: {},\n    messages: Array<string>\n    fieldsErrors: Array<string>\n    resultCode: number\n}\n\nexport type UserType = {\n    name: string\n    id: number\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    }\n    status: string\n    followed: boolean\n}\n\ntype GetUserType = {\n    items: Array<UserType>\n    totalCount: number\n    error: string\n}\n\n\n","import {usersAPI, UserType} from \"../../api/users-api\";\nimport {ThunkType} from \"../../app/redux-store\";\nimport {handleServerNetworkError} from \"../../utils/error-utils\";\n\nexport type UsersDomainType = {\n    usersList: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    isFollowing: Array<number>\n    disableButton: boolean\n    filter: {\n        term: string,\n        friend: null | boolean\n\n    }\n}\n\nexport type FilterType = typeof initialState.filter\n\nconst initialState: UsersDomainType = {\n    usersList: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    isFollowing: [],\n    disableButton: false,\n    filter: {\n        term: '',\n        friend: null\n    }\n}\n\nexport const usersReducer = (state = initialState, action: UsersActionsType): UsersDomainType => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: true} : u)}\n        case 'UNFOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: false} : u)}\n        case 'SET-USERS':\n            return {...state, usersList: action.users}\n        case 'SET-CURRENT-PAGE':\n            return {...state, currentPage: action.currentPage}\n        case 'SET-TOTAL-USERS-COUNT':\n            return {...state, totalUsersCount: action.totalUsersCount}\n        case 'TOGGLE_IS_FETCHING':\n            return {...state, isFetching: action.isFetching}\n        case 'TOGGLE_IS_FOLLOWING':\n            return {\n                ...state,\n                isFollowing: action.disableButton\n                    ? [...state.isFollowing, action.userID]\n                    : [...state.isFollowing.filter(id => id !== action.userID)]\n            }\n        case 'USERS/SET_FILTER':\n            return {...state, filter: action.payload}\n        default:\n            return state\n    }\n}\n\n// AC\n\nexport type UsersActionsType =\n    ReturnType<typeof follow>\n    | ReturnType<typeof unfollow>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof toggleIsFetching>\n    | ReturnType<typeof toggleIsFollowing>\n    | ReturnType<typeof setFilter>\n\nexport const setFilter = (filter: FilterType) => ({type: 'USERS/SET_FILTER', payload: filter} as const)\nexport const toggleIsFollowing = (disableButton: boolean, userID: number) => ({\n    type: 'TOGGLE_IS_FOLLOWING',\n    disableButton,\n    userID\n} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const)\nexport const follow = (id: number) => ({type: 'FOLLOW', id} as const)\nexport const unfollow = (id: number) => ({type: 'UNFOLLOW', id} as const)\nexport const setUsers = (users: Array<UserType>) => ({type: 'SET-USERS', users} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: 'SET-CURRENT-PAGE', currentPage} as const)\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\n    type: 'SET-TOTAL-USERS-COUNT',\n    totalUsersCount\n} as const)\n\n// Thunk\n\nexport const getUsersTC = (page: number, pageSize: number, filter: FilterType): ThunkType => async dispatch => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setFilter(filter))\n    dispatch(setCurrentPage(1))\n    try {\n        const res = await usersAPI.getUsers(page, pageSize, filter)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(res.items))\n        dispatch(setTotalUsersCount(res.totalCount))\n    } catch (e) {\n        handleServerNetworkError((e as Error), dispatch)\n    }\n\n}\nexport const followUserTC = (userID: number): ThunkType => async dispatch => {\n    dispatch(toggleIsFollowing(true, userID))\n    const res = await usersAPI.followUser(userID)\n    if (res.data.resultCode === 0) {\n        dispatch(follow(userID))\n    }\n    dispatch(toggleIsFollowing(false, userID))\n}\nexport const unfollowUserTC = (userID: number): ThunkType => async dispatch => {\n    dispatch(toggleIsFollowing(true, userID))\n    const res = await usersAPI.unfollowUser(userID)\n    if (res.data.resultCode === 0) {\n        dispatch(unfollow(userID))\n    }\n    dispatch(toggleIsFollowing(false, userID))\n}\n\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n    },\n})\n\nexport const authAPI = {\n    authMe() {\n        return instance.get<ResponseType<AuthMeData>>('auth/me')\n    },\n    login(email: string, password: string, rememberMe: boolean = false) {\n        return instance.post<ResponseType<LoginData>>('auth/login', {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete<ResponseType<{}>>('auth/login')\n    }\n}\n\nexport type ResponseType<T> = {\n    data: T\n    messages: Array<string>\n    fieldsErrors: Array<string>\n    resultCode: number\n}\n\ntype LoginData = {\n    userId: number\n}\nexport type AuthMeData = {\n    id: number | null\n    login: string | null\n    email: string | null\n}","import {authAPI, AuthMeData, ResponseType} from \"../../api/auth-api\";\nimport {ThunkType} from \"../../app/redux-store\";\nimport {setAppInitialization, setAppStatus} from \"../../app/app-reducer\";\nimport {handleServerAppError, handleServerNetworkError} from \"../../utils/error-utils\";\n\n\nexport type AuthDomainType = ResponseType<AuthMeData> & {\n    isAuth: boolean\n}\n\nconst initialState: AuthDomainType = {\n    data: {\n        id: null,\n        login: null,\n        email: null,\n    },\n    messages: [],\n    fieldsErrors: [],\n    resultCode: 0,\n    isAuth: false,\n}\n\n\nexport const authReducer = (state = initialState, action: AuthActionsType): AuthDomainType => {\n    switch (action.type) {\n        case 'SET-AUTH-USER-DATA':\n            return {...state, data: {...state.data, ...action.payload}, isAuth: action.isAuth}\n        default:\n            return state\n    }\n}\n\n// AC\n\nexport type AuthActionsType = ReturnType<typeof setAuthUserData>\n\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean) => {\n    return {\n        type: 'SET-AUTH-USER-DATA',\n        payload: {id, login, email},\n        isAuth\n    } as const\n}\n\n// Thunk\n\nexport const getAuthUserDataTC = (): ThunkType => async dispatch => {\n    dispatch(setAppStatus('loading'))\n    try {\n        const res = await authAPI.authMe()\n        if (res.data.resultCode === 0) {\n            let {id, login, email} = res.data.data\n            dispatch(setAuthUserData(id, login, email, true))\n            dispatch(setAppInitialization(true))\n            dispatch(setAppStatus('succeeded'))\n        } else {\n            handleServerAppError(res.data, dispatch)\n        }\n    } catch (e) {\n        handleServerNetworkError((e as Error), dispatch)\n    }\n\n}\n\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkType => async dispatch => {\n    dispatch(setAppStatus('loading'))\n    try {\n        const res = await authAPI.login(email, password, rememberMe)\n        if (res.data.resultCode === 0) {\n            dispatch(getAuthUserDataTC())\n            dispatch(setAppStatus('succeeded'))\n        } else {\n            handleServerAppError(res.data, dispatch)\n        }\n    } catch (e) {\n        handleServerNetworkError((e as Error), dispatch)\n    }\n\n}\n\nexport const logoutTC = (): ThunkType => async dispatch => {\n    dispatch(setAppStatus('loading'))\n    try {\n        const res = await authAPI.logout()\n        if (res.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n            dispatch(setAppInitialization(false))\n            dispatch(setAppStatus('succeeded'))\n        } else {\n            handleServerAppError(res.data, dispatch)\n        }\n    } catch (e) {\n        handleServerNetworkError((e as Error), dispatch)\n    }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {ProfileActionsType, profileReducer} from \"../features/Profile/profile-reducer\";\nimport {UsersActionsType, usersReducer} from \"../features/Users/users-reducer\";\nimport {AuthActionsType, authReducer} from \"../features/Login/auth-reducer\";\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\nimport {appReducer, AppReducerActionsType} from \"./app-reducer\";\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n})\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nexport type AppActionsType = UsersActionsType | ProfileActionsType | AuthActionsType | AppReducerActionsType\n\nexport type ThunkType = ThunkAction<void, AppStateType, unknown, AppActionsType>\n\n\n//@ts-ignore\nconsole.log(window.store = store)\n\n\n","import * as React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logoutTC} from \"../Login/auth-reducer\";\nimport {AppStateType} from \"../../app/redux-store\";\nimport s from './Header.module.scss'\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport {RequestStatusType} from \"../../app/app-reducer\";\n\nexport const Header = React.memo(() => {\n    const dispatch = useDispatch()\n    const appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus)\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n    const login = useSelector<AppStateType, string | null>(state => state.auth.data.login)\n    const logoutHandler = () => {\n        dispatch(logoutTC())\n    }\n    return (\n        <header className={s.header}>\n            <div className={s.container}>\n                <div className={s.title}>\n                    <BoltIcon sx={{fontSize: '45px', color: '#64d580'}}/>\n                    <h1>Lumos.</h1>\n                </div>\n                <div>\n                    {isAuth\n                        ?\n                        <div className={s.loginInfo}>\n                            <span>{login}</span>\n                            <button className={s.logoutBtn} onClick={() => logoutHandler()} disabled={appStatus === 'loading'}>\n                                <LogoutIcon sx={{fontSize: '35px', color: '#2254f5'}}/>\n                            </button>\n                        </div>\n                        : <></>}\n                </div>\n            </div>\n\n        </header>\n    )\n})","import React from 'react';\nimport s from \"./User.module.scss\";\nimport {NavLink} from 'react-router-dom';\nimport { UserType } from '../../../api/users-api';\nimport Avatar from '@mui/material/Avatar';\nimport Grid from '@mui/material/Grid';\n\ntype UsersType = {\n    usersList: Array<UserType>\n    isFollowing: Array<number>\n    followUserHandler: (userID: number) => void\n    unfollowUserHandler: (userID: number) => void\n}\n\nexport const User = React.memo(({usersList, isFollowing, followUserHandler, unfollowUserHandler}: UsersType) => {\n    const mappedUsers = usersList.map(u => {\n        return (\n            <Grid key={u.id} item xs>\n\n            <div className={s.user}>\n                <div>\n                    <NavLink to={'/profile/' + u.id}>\n                        <Avatar alt={u.name} src={u.photos?.small} sx={{width: 65, height: 65}}/>\n                    </NavLink>\n                </div>\n                <h4>{u.name}</h4>\n                <p>ID: {u.id}</p>\n                <div>\n                    {u.followed\n                        ? <button className={s.unfollowBtn} onClick={() => unfollowUserHandler(u.id)}\n                                  disabled={isFollowing.some(id => id === u.id)}>UNFOLLOW</button>\n                        : <button className={s.followBtn} onClick={() => followUserHandler(u.id)}\n                                  disabled={isFollowing.some(id => id === u.id)}>FOLLOW</button>}\n                </div>\n            </div>\n            </Grid>\n\n        )\n    })\n\n    return <div className={s.users}>\n        <Grid spacing={2} container>\n            {mappedUsers}\n        </Grid>\n    </div>\n})\n\n","import {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {FilterType} from \"../users-reducer\";\nimport * as Yup from 'yup';\nimport s from './UsersSearchForm.module.scss'\nimport FilterAltOutlinedIcon from '@mui/icons-material/FilterAltOutlined';\n\ntype UsersSearchFormType = {\n    onFilterChanged: (filter: FilterType) => void\n\n}\ntype FormType = {\n    term: string\n    friend: 'null' | 'true' | 'false'\n}\nconst validationSchema = Yup.object({\n    term: Yup.string()\n        .max(300, 'Must be 300 characters or less')\n})\n\nexport const UsersSearchForm = React.memo(({onFilterChanged}: UsersSearchFormType) => {\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (setSubmitting: boolean) => void }) => {\n        const filter: FilterType = {\n            term: values.term,\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\n        }\n        onFilterChanged(filter)\n        setSubmitting(false)\n    }\n    return <div>\n        <Formik\n            initialValues={{term: '', friend: 'null'}}\n            onSubmit={submit}\n            validationSchema={validationSchema}\n        >\n            {\n                ({isSubmitting}) => (\n                    <Form className={s.searchForm}>\n                        <div className={s.inputBlock}>\n                            <Field name=\"term\" type=\"text\" placeholder={'Search here'}/>\n                            <button className={s.searchBtn} type=\"submit\" disabled={isSubmitting}>\n                                <div className={s.icon}><FilterAltOutlinedIcon\n                                    sx={{fontSize: '25px', color: '#adb5bd'}}/></div>\n                            </button>\n                        </div>\n                        <div className={s.selectBlock}>\n                            <Field className={s.select} name=\"friend\" as=\"select\">\n                                <option value=\"null\">All</option>\n                                <option value=\"true\">Only followed</option>\n                                <option value=\"false\">Only unfollowed</option>\n                            </Field>\n                        </div>\n\n                    </Form>)\n            }\n        </Formik>\n    </div>\n})","import {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../app/redux-store\";\nimport {FilterType, followUserTC, getUsersTC, setCurrentPage, unfollowUserTC, UsersDomainType} from \"./users-reducer\";\nimport React, {useCallback, useEffect} from \"react\";\nimport {User} from \"./User/User\";\nimport {CircularProgress, Pagination} from \"@mui/material\";\nimport {UsersSearchForm} from \"./UsersSearchForm/UsersSearchForm\";\nimport s from './Users.module.scss'\n\nexport const Users = React.memo(() => {\n    const dispatch = useDispatch()\n    const usersPage = useSelector<AppStateType, UsersDomainType>(state => state.usersPage)\n\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(getUsersTC(1, usersPage.pageSize, filter))\n    }\n\n    useEffect(() => {\n        dispatch(getUsersTC(usersPage.currentPage, usersPage.pageSize, usersPage.filter))\n        return function () {\n            setCurrentPage(1)\n        }\n    }, [dispatch, usersPage.currentPage, usersPage.pageSize, usersPage.filter])\n\n    const changeCurrentPage = useCallback((currentPage: number) => {\n        dispatch(getUsersTC(currentPage, usersPage.pageSize, usersPage.filter))\n    }, [dispatch, usersPage.pageSize, usersPage.filter])\n\n    const followUserHandler = useCallback((userID: number) => {\n        dispatch(followUserTC(userID))\n    }, [dispatch])\n\n    const unfollowUserHandler = useCallback((userID: number) => {\n        dispatch(unfollowUserTC(userID))\n    }, [dispatch])\n\n    let pagesCount = Math.ceil(usersPage.totalUsersCount / usersPage.pageSize)\n\n    return (\n        <div className={s.users}>\n            <div className={s.searchBlock}>\n                <div>\n                    <h2>Users</h2>\n                </div>\n                <div>\n                    <UsersSearchForm onFilterChanged={onFilterChanged}/>\n                </div>\n            </div>\n\n            {usersPage.isFetching ? <CircularProgress style={{marginTop: '30px', marginBottom: '20px'}}/> :\n                <User usersList={usersPage.usersList}\n                      isFollowing={usersPage.isFollowing}\n                      followUserHandler={followUserHandler}\n                      unfollowUserHandler={unfollowUserHandler}/>}\n            <div className={s.pagination}>\n                <Pagination count={pagesCount} color=\"primary\" onChange={(e, value) => changeCurrentPage(value)}/>\n            </div>\n        </div>)\n\n})\n\n\n\n","import s from './Navbar.module.scss'\nimport React from \"react\";\nimport {NavLink} from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.navbar}>\n            <NavLink to='/profile' className={({isActive}) => isActive ? s.active : ''}>\n                Profile\n            </NavLink>\n            <NavLink to='/users' className={({isActive}) => isActive ? s.active : ''}>\n                Users\n            </NavLink>\n        </nav>\n    )\n}","import React, { memo } from \"react\";\nimport s from './About.module.scss'\n\n\ntype AboutPropsType = {\n    aboutMe: string | undefined\n}\n\nexport const About = memo(({aboutMe}: AboutPropsType) => {\n    return (\n        <div className={s.aboutBlock}>\n            <h4>About</h4>\n            {aboutMe ? <p>{aboutMe}</p> : <p>The user did not tell about himself.</p>}\n\n        </div>\n    )\n})\n\n","import {Avatar} from '@mui/material'\nimport s from './Post.module.scss'\n\nexport type PostPropsType = {\n    id: string\n    post: string\n    likesCount: number\n    avatar: string | undefined\n    name: string | undefined\n}\n\nfunction Post(props: PostPropsType) {\n    return (\n        <div className={s.post}>\n            <div className={s.postHeader}>\n                <Avatar src={props.avatar} sx={{width: 45, height: 45}}/>\n                <h4>{props.name}</h4>\n            </div>\n            <div>\n                <p>{props.post}</p>\n            </div>\n            <div>\n                <span>{props.likesCount} Like</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {PostAdd} from \"@mui/icons-material\";\nimport {IconButton} from \"@mui/material\";\nimport * as Yup from 'yup';\nimport s from './MyPostsForm.module.scss'\n\ntype MyPostsFormType = {\n    addPostHandler: (value: string) => void\n}\n\ntype FormType = {\n    postText: string\n}\n\nconst validationSchema = Yup.object({\n    postText: Yup.string()\n        .max(300, 'Must be 300 characters or less')\n})\n\nexport const MyPostsForm = React.memo(({addPostHandler}: MyPostsFormType) => {\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (setSubmitting: boolean) => void }) => {\n        addPostHandler(values.postText)\n        setSubmitting(false)\n    }\n    return <div style={{width: '100%'}}>\n        <Formik\n            initialValues={{postText: ''}}\n            onSubmit={submit}\n            validationSchema={validationSchema}\n        >\n            {\n                ({isSubmitting}) => (\n                    <Form className={s.myPostsForm}>\n                        <IconButton type=\"submit\" disabled={isSubmitting} style={{margin: '0 0 5px 0'}}>\n                            <PostAdd color=\"primary\"/>\n                        </IconButton>\n                        <span>Create post</span>\n                        <Field component={'textarea'} name=\"postText\" type=\"text\" placeholder={'What\\'s on your mind?'}/>\n                        <ErrorMessage name=\"postText\" />\n\n                    </Form>)\n            }\n        </Formik>\n    </div>\n})","import Post from \"./Post/Post\";\nimport s from './MyPosts.module.scss'\nimport {useCallback} from \"react\";\nimport React from \"react\";\nimport {addPost, PostType} from \"../profile-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {MyPostsForm} from \"./MyPostsForm/MyPostsForm\";\nimport {AppStateType} from \"../../../app/redux-store\";\n\ntype MyPostsPropsType = {\n    avatar: string | undefined\n    name: string | undefined\n}\nexport const MyPosts = React.memo(({avatar, name}: MyPostsPropsType) => {\n    const dispatch = useDispatch()\n    const posts = useSelector<AppStateType, Array<PostType>>(state => state.profilePage.posts)\n    const postsElements = posts.map(m => <Post key={m.id} id={m.id} post={m.post} avatar={avatar} name={name}\n                                                                 likesCount={m.likesCount}/>)\n\n    const addPostHandler = useCallback((value: string) => {\n        const newPost = value.trim()\n        if (newPost) {\n            dispatch(addPost(newPost))\n        }\n    }, [dispatch])\n\n    return (\n        <div className={s.myPosts}>\n            <div className={s.postForm}>\n                <MyPostsForm addPostHandler={addPostHandler}/>\n            </div>\n            <div className={s.allPosts}>\n                {postsElements}\n            </div>\n\n        </div>\n    )\n})","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport s from './ProfileStatus.module.scss'\nimport {updateStatusProfileTC} from \"../profile-reducer\";\nimport {AppStateType} from \"../../../app/redux-store\";\nimport {RequestStatusType} from \"../../../app/app-reducer\";\n\ntype ProfileStatusType = {\n    status: string\n}\n\nexport const ProfileStatus = React.memo(({status}: ProfileStatusType) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const [localStatus, setLocalStatus] = useState<string>(status)\n    const dispatch = useDispatch()\n    const appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus)\n\n    const onEditMode = () => {\n        if (appStatus === 'loading') {\n            return\n        } else {\n            setEditMode(true)\n        }\n    }\n    const offEditMode = () => {\n        setEditMode(false)\n        dispatch(updateStatusProfileTC(localStatus.trim()))\n\n    }\n\n    useEffect(() => {\n        setLocalStatus(status)\n    }, [status])\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => event.currentTarget.select()\n\n    const updateStatus = (e: ChangeEvent<HTMLInputElement>) => {\n        setLocalStatus(e.currentTarget.value)\n    }\n\n    const keyHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            offEditMode()\n        }\n    }\n\n    return (\n        <div className={s.profileStatus}>\n            {editMode && <div className={s.input}>\n                <input type={'text'} onChange={updateStatus} autoFocus onFocus={handleFocus}\n                           onBlur={offEditMode}\n                           value={localStatus} onKeyPress={keyHandler} disabled={appStatus === 'loading'}/>\n            </div>}\n            {!editMode && <div className={s.span} onClick={onEditMode}>\n                {status ? status : <span className={s.noStatus}>type status</span>}\n            </div>}\n        </div>\n    )\n})\n\n\n","export default __webpack_public_path__ + \"static/media/bgnode.225cbf7a.jpg\";","import s from './Profile.module.scss'\nimport React, {useEffect} from \"react\";\nimport {About} from './About/About';\nimport {ProfileType} from \"../../api/profile-api\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../app/redux-store\";\nimport {useParams} from \"react-router-dom\";\nimport {setStatusProfileTC, setUserProfileTC} from \"./profile-reducer\";\nimport {MyPosts} from './MyPosts/MyPosts';\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\nimport {Avatar} from \"@mui/material\";\nimport styled from 'styled-components';\nimport imag from '../../assets/images/bgnode.jpg'\n\nconst HeadImg = styled.div<{ img: any }>`\n        border-radius: 15px;\n        height: 70%;\n        width: 100%;\n        background-image: url(${props => props.img});\n        background-position: center;\n        background-size: cover;\n        overflow: hidden;\n    `\n\nexport const Profile = React.memo(() => {\n    const dispatch = useDispatch()\n    const profile = useSelector<AppStateType, ProfileType | null>(state => state.profilePage.profile)\n    const status = useSelector<AppStateType, string>(state => state.profilePage.status)\n    const authUserId = useSelector<AppStateType, number | null>(state => state.auth.data.id)\n    let {userId}: any = useParams()\n\n    if (!userId) {\n        userId = authUserId;\n    }\n\n\n    useEffect(() => {\n        dispatch(setUserProfileTC(userId))\n        dispatch(setStatusProfileTC(userId))\n    }, [dispatch, userId])\n\n    return (\n        <div className={s.profile}>\n            <div className={s.profileHeader}>\n                {profile?.photos.large\n                    ? <HeadImg img={profile?.photos.large}/>\n                    : <HeadImg img={imag}/>}\n                <div className={s.headInfo}>\n                    <div className={s.avatar}>\n                        <Avatar alt={profile?.fullName}\n                                src={profile?.photos.small}\n                                sx={{width: 100, height: 100, border: '4px solid white', position: \"absolute\", top: '-85px',\n                                    left: '25px'}}/>\n                    </div>\n                    <div className={s.info}>\n                        <div>\n                            <h4>{profile?.fullName}</h4>\n                            <ProfileStatus status={status}/>\n                        </div>\n                        <div>\n                            <button>ssss</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={s.profileContent}>\n                <div className={s.about}>\n                    <About aboutMe={profile?.aboutMe}/>\n                </div>\n                <div className={s.posts}>\n                    <MyPosts avatar={profile?.photos.small} name={profile?.fullName}/>\n                </div>\n            </div>\n        </div>\n    )\n})","import React from 'react';\nimport {Route, Routes} from \"react-router-dom\";\nimport {Users} from \"../Users/Users\";\nimport { Navbar } from '../Navbar/Navbar';\nimport {Profile} from \"../Profile/Profile\";\nimport s from './Main.module.scss'\n\nexport const Main = React.memo(() => {\n    return (\n        <main className={s.main}>\n                    <div className={s.nav}>\n                        <Navbar/>\n                    </div>\n                    <div className={s.content}>\n                        <Routes>\n                            <Route path=\"profile\" element={<Profile/>}>\n                                <Route path=\":userId\" element={<Profile/>}/>\n                            </Route>\n                            <Route path={'users'} element={<Users/>}/>\n                            <Route path=\"*\" element={<div>404</div>}/>\n                            <Route path={'social-network'} element={<Users/>}/>\n                            <Route path={'/'} element={<Users/>}/>\n                        </Routes>\n                    </div>\n\n        </main>\n    )\n})\n\n\n","import * as React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\nimport {useDispatch, useSelector } from 'react-redux';\nimport {AppErrorType, setAppError} from '../../app/app-reducer';\nimport {AppStateType} from \"../../app/redux-store\";\n\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n})\n\nexport function ErrorSnackbar() {\n    const dispatch = useDispatch()\n    const error = useSelector<AppStateType, AppErrorType>(state => state.app.error)\n    const isOpen = error !== null\n\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        dispatch(setAppError(null))\n    }\n\n    return (\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}>\n            <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n                {error}\n            </Alert>\n        </Snackbar>\n\n    )\n}\n\n","import * as Yup from \"yup\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginTC} from \"../auth-reducer\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport s from './LoginForm.module.scss'\nimport {AppStateType} from \"../../../app/redux-store\";\nimport {RequestStatusType} from \"../../../app/app-reducer\";\n\ntype LoginFormType = {\n    email: string,\n    password: string,\n    rememberMe: boolean\n}\nconst validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string()\n        .required('No password provided')\n        .min(8, 'Password is too short - should be 8 chars minimum.')\n        .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n})\nexport const LoginForm = () => {\n    const dispatch = useDispatch()\n    const appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus)\n\n    const loginHandler = (email: string, password: string, rememberMe: boolean) => {\n        dispatch(loginTC(email, password, rememberMe))\n    }\n    const submit = (values: LoginFormType, {setSubmitting}: { setSubmitting: (setSubmitting: boolean) => void }) => {\n        loginHandler(values.email, values.password, values.rememberMe)\n        setSubmitting(false)\n    }\n\n    return <div>\n        <Formik\n            initialValues={{email: '', password: '', rememberMe: false}}\n            validationSchema={validationSchema}\n            onSubmit={submit}\n        >\n            {\n                ({isSubmitting}) => (\n                    <Form className={s.loginForm}>\n                        <Field name=\"email\" type=\"email\" placeholder={'Email'}/>\n\n\n                        <Field name=\"password\" type=\"password\" placeholder={'Password'}/>\n\n\n                        <div className={s.remember}>\n                            <div><Field name=\"rememberMe\" type=\"checkbox\"/></div>\n                            <div><label htmlFor=\"rememberMe\">Remember me</label></div>\n                        </div>\n\n                        <button className={s.loginBtn} type=\"submit\" disabled={appStatus === 'loading'}>Login</button>\n                    </Form>)\n            }\n        </Formik>\n    </div>\n}","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport s from './Login.module.scss'\nimport {LoginForm} from \"./LoginForm/LoginForm\";\nimport {AppStateType} from \"../../app/redux-store\";\nimport {RequestStatusType} from \"../../app/app-reducer\";\n\nexport const Login = React.memo(() => {\n    const appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus)\n    return (\n        appStatus === 'loading' ? <></>\n            :\n            <div className={s.login}>\n                <h1>Login into your account</h1>\n                <LoginForm/>\n            </div>\n    )\n})\n\n","import React, {useEffect} from 'react'\nimport './App.module.scss'\nimport s from './App.module.scss'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from './redux-store';\nimport {Header} from \"../features/Header/Header\";\nimport {Main} from \"../features/Main/Main\";\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar';\nimport {getAuthUserDataTC} from '../features/Login/auth-reducer';\nimport {Login} from \"../features/Login/Login\";\n\nexport const App = () => {\n    const dispatch = useDispatch()\n    const appInitialization = useSelector<AppStateType, boolean>(state => state.app.initialization)\n\n    useEffect(() => {\n        dispatch(getAuthUserDataTC())\n    }, [dispatch])\n\n    return (\n        <div className={s.app}>\n            <ErrorSnackbar/>\n            {appInitialization\n                ? <>\n                    <Header/>\n                    <Main/>\n                </>\n                : <>\n                    <Login/>\n                </>}\n\n        </div>\n\n    );\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './index.scss'\nimport {store} from \"./app/redux-store\";\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport {App} from './app/App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2bhSD\",\"profileHeader\":\"Profile_profileHeader__3SFge\",\"headInfo\":\"Profile_headInfo__S7XWr\",\"avatar\":\"Profile_avatar__3EgOt\",\"info\":\"Profile_info__1IsRk\",\"profileContent\":\"Profile_profileContent__3YG9w\",\"about\":\"Profile_about__YHcuh\",\"posts\":\"Profile_posts__34jW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"UsersSearchForm_searchForm__14s5Z\",\"inputBlock\":\"UsersSearchForm_inputBlock__2-Nk8\",\"searchBtn\":\"UsersSearchForm_searchBtn__10KSX\",\"icon\":\"UsersSearchForm_icon__2zzXz\",\"selectBlock\":\"UsersSearchForm_selectBlock__3WXoG\",\"select\":\"UsersSearchForm_select__36IBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22rC9\",\"container\":\"Header_container__2bcQR\",\"title\":\"Header_title__2UK3R\",\"loginInfo\":\"Header_loginInfo__12Qmf\",\"logoutBtn\":\"Header_logoutBtn__3dOFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"User_users__2zBa5\",\"user\":\"User_user__1zDCz\",\"followBtn\":\"User_followBtn__1C6TZ\",\"unfollowBtn\":\"User_unfollowBtn__2TDO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__1j3HN\",\"span\":\"ProfileStatus_span__2LAS-\",\"noStatus\":\"ProfileStatus_noStatus__3-4mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__nB4Rk\",\"searchBlock\":\"Users_searchBlock__1Qm7o\",\"pagination\":\"Users_pagination__1MrqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__RW2mG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2o7U5\",\"postForm\":\"MyPosts_postForm__amRnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1DGW4\",\"nav\":\"Main_nav__3Omg5\",\"content\":\"Main_content__3XygP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__3VhNT\",\"remember\":\"LoginForm_remember__1yzVo\",\"loginBtn\":\"LoginForm_loginBtn__2jpEX\"};"],"sourceRoot":""}