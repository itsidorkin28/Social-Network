{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.scss","redux/profile-reducer.ts","redux/dialogs-reducer.ts","api/api.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Profile/UserDescription/UserDescription.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","AppRoutes.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Navbar/Navbar.module.scss","components/Profile/Profile.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Users/Users.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Dialogs/Message/Message.module.scss","components/Profile/UserDescription/UserDescription.module.scss"],"names":["module","exports","initialState","posts","id","v1","post","likesCount","postText","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","userId","photos","small","large","dialogs","name","messages","message","messageText","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","usersList","totalUsersCount","isFetching","isFollowing","disableButton","toggleIsFollowing","userID","type","toggleIsFetching","setUsers","users","setTotalUsersCount","login","email","fieldsErrors","resultCode","isAuth","rootReducer","combineReducers","profilePage","state","action","newPost","dialogsPage","newMessage","usersPage","map","u","followed","filter","auth","store","createStore","console","log","window","Navbar","className","s","navbar","to","isActive","active","DialogItem","props","path","dialogItem","Message","DialogsContainer","connect","dispatch","changeMessage","value","sendMessage","dialogsElements","d","messagesElements","m","trim","dialogsItems","messagesItems","Box","component","sx","mb","width","noValidate","autoComplete","TextField","label","multiline","maxRows","onChange","e","currentTarget","onKeyPress","ctrlKey","key","Stack","direction","spacing","Button","variant","endIcon","onClick","Users","React","memo","useDispatch","user","Avatar","alt","src","height","delete","color","size","disabled","some","status","UsersContainer","useSelector","useEffect","items","totalCount","changeCurrentPage","useCallback","pageNumber","setCurrentPage","pagesCount","Math","ceil","style","display","justifyContent","flexDirection","alignItems","Pagination","count","CircularProgress","marginTop","marginBottom","UserDescription","userDescription","Post","MyPostsContainer","changePost","addPost","postsElements","myPosts","postForm","IconButton","marginLeft","PostAdd","Profile","ProfileContainer","useParams","setUserProfile","AppRoutes","element","Header","flexGrow","AppBar","position","Toolbar","Typography","HeaderContainer","setAuthUserData","App","app","Container","fixed","maxWidth","Grid","container","item","xs","Paper","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d52733aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1jere\"};","import {PostType} from \"../components/Profile/MyPosts/Post/Post\";\nimport {v1} from \"uuid\";\n\nexport type UserDescriptionType = {\n    aboutMe?: string\n    contacts?: {\n        facebook?: string\n        website?: string\n        vk?: string\n        twitter?: string\n        instagram?: string\n        youtube?: string\n        github?: string\n        mainLink?: string\n    },\n    lookingForAJob?: boolean\n    lookingForAJobDescription?: string\n    fullName?: string\n    userId?: number\n    photos?: {\n        small?: string\n        large?: string\n    }\n}\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    postText: string\n    profile: UserDescriptionType\n}\n\nconst initialState: ProfilePageType = {\n    posts: [\n        {id: v1(), post: 'Hello!', likesCount: 3},\n        {id: v1(), post: 'JS!', likesCount: 9}\n    ],\n    postText: '',\n    profile: {\n        aboutMe: \"я круто чувак 1001%\",\n        contacts: {\n            facebook: \"facebook.com\",\n            website: 'ffds',\n            vk: \"vk.com/dimych\",\n            twitter: \"https://twitter.com/@sdf\",\n            instagram: \"instagra.com/sds\",\n            youtube: 'fdsfds',\n            github: \"github.com\",\n            mainLink: 'fdsfds'\n        },\n        lookingForAJob: true,\n        lookingForAJobDescription: \"не ищу, а дурачусь\",\n        fullName: \"samurai dimych\",\n        userId: 2,\n        photos: {\n            small: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\n            large: \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\n        }\n    }\n}\n\n\n\nexport const profileReducer = (state = initialState, action: ProfileActionsTypes): ProfilePageType => {\n    switch (action.type) {\n        case 'ADD-POST':\n            const newPost: PostType = {id: v1(), post: action.postText, likesCount: 0}\n            return {...state, posts: [newPost, ...state.posts], postText: ''}\n        case 'CHANGE-POST-TEXT':\n            return {...state, postText: action.postText}\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n        default:\n            return state\n    }\n}\n\nexport type ProfileActionsTypes = AddPostType | ChangePostType | SetUserProfileType\n\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\nexport const setUserProfile = (profile: UserDescriptionType) => {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\n\ntype AddPostType = ReturnType<typeof addPost>\nexport const addPost = (postText: string) => {\n    return {\n        type: 'ADD-POST',\n        postText\n    } as const\n}\n\nexport type ChangePostType = ReturnType<typeof changePost>\nexport const changePost = (postText: string) => {\n    return {\n        type: 'CHANGE-POST-TEXT',\n        postText\n    } as const\n}","import {MessageType} from \"../components/Dialogs/Message/Message\";\nimport {v1} from \"uuid\";\nimport {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\n\nexport type DialogsPageType = {\n    dialogs: Array<DialogItemType>\n    messages: Array<MessageType>\n    messageText: string\n}\nconst initialState = {\n    dialogs: [\n        {id: v1(), name: 'Alexander'},\n        {id: v1(), name: 'Alena'}\n    ],\n    messages: [\n        {id: v1(), message: 'Hello!'},\n        {id: v1(), message: 'How are you?'}\n    ],\n    messageText: ''\n}\n\nexport type DialogsActionsTypes = SendMessageACType | ChangeMessageTextACType\n\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: DialogsActionsTypes): DialogsPageType => {\n    switch (action.type) {\n        case 'SEND-MESSAGE':\n            const newMessage: MessageType = {id: v1(), message: action.messageText}\n            return {...state, messages: [...state.messages, newMessage], messageText: ''}\n        case 'CHANGE-MESSAGE-TEXT':\n            return {...state, messageText: action.messageText}\n        default:\n            return state\n    }\n}\n\ntype SendMessageACType = ReturnType<typeof sendMessageAC>\nexport const sendMessageAC = (messageText: string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        messageText\n    } as const\n}\n\ntype ChangeMessageTextACType = ReturnType<typeof changeMessageAC>\nexport const changeMessageAC = (messageText: string) => {\n    return {\n        type: 'CHANGE-MESSAGE-TEXT',\n        messageText\n    } as const\n}","\nimport axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n    },\n})\n\nexport const usersAPI = {\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    }\n}\n","import { Dispatch } from \"redux\"\nimport {usersAPI} from \"../api/api\";\n\nexport type UserType = {\n    name: string\n    id: number\n    uniqueUrlName?: string\n    photos?: {\n        small?: string\n        large?: string\n    }\n    status?: string\n    followed: boolean\n}\n\nexport type UsersPageType = {\n    usersList: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    isFollowing: Array<number>\n    disableButton: boolean\n}\n\nconst initialState: UsersPageType = {\n    usersList: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    isFollowing: [],\n    disableButton: false,\n}\n\nexport const usersReducer = (state = initialState, action: UsersActionsTypes): UsersPageType => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: true} : u)}\n        case 'UNFOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: false} : u)}\n        case 'SET-USERS':\n            return {...state, usersList: action.users}\n        case 'SET-CURRENT-PAGE':\n            return {...state, currentPage: action.currentPage}\n        case 'SET-TOTAL-USERS-COUNT':\n            return {...state, totalUsersCount: action.totalUsersCount}\n        case 'TOGGLE_IS_FETCHING':\n            return {...state, isFetching: action.isFetching}\n        case 'TOGGLE_IS_FOLLOWING':\n            return {\n                ...state,\n                isFollowing: action.disableButton\n                    ? [...state.isFollowing, action.userID]\n                    : [...state.isFollowing.filter(id => id !== action.userID)]\n            }\n        default:\n            return state\n    }\n}\n\nexport type UsersActionsTypes =\n    FollowType\n    | UnfollowType\n    | SetUsersType\n    | SetCurrentPageType\n    | SetTotalUsersCountType\n    | ToggleIsFetchingType\n    | ToggleIsFollowingType\n\ntype ToggleIsFollowingType = ReturnType<typeof toggleIsFollowing>\nexport const toggleIsFollowing = (disableButton: boolean, userID: number) => {\n    return {\n        type: 'TOGGLE_IS_FOLLOWING',\n        disableButton,\n        userID,\n    } as const\n}\n\ntype ToggleIsFetchingType = ReturnType<typeof toggleIsFetching>\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: 'TOGGLE_IS_FETCHING',\n        isFetching,\n    } as const\n}\n\ntype FollowType = ReturnType<typeof follow>\nexport const follow = (id: number) => {\n    return {\n        type: 'FOLLOW',\n        id,\n    } as const\n}\n\ntype UnfollowType = ReturnType<typeof unfollow>\nexport const unfollow = (id: number) => {\n    return {\n        type: 'UNFOLLOW',\n        id,\n    } as const\n}\n\ntype SetUsersType = ReturnType<typeof setUsers>\nexport const setUsers = (users: Array<UserType>) => {\n    return {\n        type: 'SET-USERS',\n        users,\n    } as const\n}\n\ntype SetCurrentPageType = ReturnType<typeof setCurrentPage>\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage,\n    } as const\n}\n\ntype SetTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\nexport const setTotalUsersCount = (totalUsersCount: number) => {\n    return {\n        type: 'SET-TOTAL-USERS-COUNT',\n        totalUsersCount,\n    } as const\n}\n\nconst getUsers = (currentPage: number, pageSize: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFetching(true))\n        usersAPI.getUsers(currentPage, pageSize)\n            .then(response => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(response.items))\n                dispatch(setTotalUsersCount(response.totalCount))\n            })\n    }\n\n}\n\n","type AuthType = {\n    data: DataType\n    messages: Array<string>\n    fieldsErrors: Array<any>\n    resultCode: number\n    isAuth: boolean\n}\n\ntype DataType = {\n    id: number\n    login: string\n    email: string\n}\nconst initialState: AuthType = {\n    data: {\n        id: 20566,\n        login: \"itsidorkin\",\n        email: \"itsidorkin28@gmail.com\",\n    },\n    messages: [],\n    fieldsErrors: [],\n    resultCode: 0,\n    isAuth: false\n}\n\n\nexport const authReducer = (state = initialState, action: AuthActionsTypes): AuthType => {\n    switch (action.type) {\n        case 'SET-AUTH-USER-DATA':\n            return {...state, ...action.data, isAuth: true}\n        default:\n            return state\n    }\n}\n\nexport type AuthActionsTypes = SetUserDataType\n\ntype SetUserDataType = ReturnType<typeof setAuthUserData>\nexport const setAuthUserData = (id: number, login: string, email: string) => {\n    return {\n        type: 'SET-AUTH-USER-DATA',\n        data: {id, login, email}\n    } as const\n}\n\n","import {combineReducers, createStore} from \"redux\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {dialogsReducer} from \"./dialogs-reducer\";\nimport {usersReducer} from \"./users-reducer\";\nimport {authReducer} from \"./auth-reducer\";\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n})\n\nexport type RootStateType = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer)\n\n//@ts-ignore\nconsole.log(window.store = store)\n\n\n","import s from './Navbar.module.scss'\nimport React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.navbar}>\n            <div>\n               <NavLink to='/profile' className={({ isActive }) => isActive ? s.active : ''}>\n                   Profile\n               </NavLink>\n            </div>\n            <div>\n                <NavLink to='/dialogs' className={({ isActive }) => isActive ? s.active : ''}>\n                    Messages\n                </NavLink>\n            </div>\n            <div>\n                <NavLink to='/users' className={({ isActive }) => isActive ? s.active : ''}>\n                    Find Users\n                </NavLink>\n            </div>\n        </nav>\n    )\n}","import s from \"./DialogItem.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nexport type DialogItemType = {\n    id: string\n    name: string\n}\nexport const DialogItem = (props: DialogItemType) => {\n    let path = `/dialogs/${props.id}`\n\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={path} className={({ isActive }) => isActive ? s.active : ''}>{props.name}</NavLink>\n        </div>\n    )\n}","import s from \"./Message.module.scss\";\nimport React from \"react\";\n\nexport type MessageType = {\n    id: string\n    message: string\n}\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}","import {connect} from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {changeMessageAC, DialogsPageType, sendMessageAC} from '../../redux/dialogs-reducer';\nimport { RootStateType } from '../../redux/redux-store';\nimport {Dialogs} from \"./Dialogs\";\n\ntype MapStateToPropsType = {\n    dialogsPage: DialogsPageType\n}\n\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\ntype MapDispatchToPropsType = {\n    changeMessage: (value: string) => void\n    sendMessage: (value: string) => void\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        changeMessage: (value: string) => {\n            const action = changeMessageAC(value)\n            dispatch(action)\n        },\n        sendMessage: (value: string) => {\n            const action = sendMessageAC(value)\n            dispatch(action)\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Dialogs.module.scss'\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\n\ntype DialogsType = {\n    dialogsPage: DialogsPageType\n    sendMessage: (value: string) => void\n    changeMessage: (value: string) => void\n}\n\nexport const Dialogs = (props: DialogsType) => {\n\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n    const messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changeMessage(e.currentTarget.value);\n    };\n\n    const sendMessage = () => {\n        const newMessage = props.dialogsPage.messageText.trim()\n        if (newMessage) {\n            props.sendMessage(newMessage)\n        }\n    }\n    const keyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            sendMessage()\n        }\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messagesItems}>\n                {messagesElements}\n                <div>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': {mb: 1, width: '100%'},\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"Type message\"\n                            multiline\n                            maxRows={4}\n                            value={props.dialogsPage.messageText}\n                            onChange={changeHandler}\n                            onKeyPress={keyPressHandler}/>\n\n                    </Box>\n                    <Stack direction=\"row\" spacing={1}>\n                        <Button variant=\"contained\" endIcon={<SendIcon/>} onClick={sendMessage}>\n                            Send\n                        </Button>\n                    </Stack>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Avatar, Button} from \"@mui/material\";\nimport s from \"./Users.module.scss\";\nimport {follow, toggleIsFollowing, unfollow, UserType} from \"../../redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport axios from \"axios\";\n\ntype UsersType = {\n    usersList: Array<UserType>\n    isFollowing: Array<number>\n}\n\nexport const Users = React.memo(({usersList, isFollowing}: UsersType) => {\n    const dispatch = useDispatch()\n\n    return <div>\n        <div className={s.users}>\n            {usersList.map(u => {\n                return (\n                    <div key={u.id} className={s.user}>\n                        <div>\n                            <NavLink to={'/profile/' + u.id}>\n                                <Avatar alt={u.name} src={u.photos?.small} sx={{width: 100, height: 100}}/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            {u.followed\n                                ? <Button onClick={() => {\n                                    dispatch(toggleIsFollowing(true, u.id))\n                                    axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\n                                        withCredentials: true,\n                                        headers: {\n                                            'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n                                        }\n                                    })\n                                        .then(response => {\n                                            if (response.data.resultCode === 0) {\n                                                dispatch(unfollow(u.id))\n                                            }\n                                            dispatch(toggleIsFollowing(false, u.id))\n                                        })\n                                }} variant=\"contained\"\n                                          color=\"error\"\n                                          size='small'\n                                          disabled={isFollowing.some(id => id === u.id)}>Unfollow</Button>\n                                : <Button onClick={() => {\n                                    dispatch(toggleIsFollowing(true, u.id))\n                                    axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\n                                        withCredentials: true,\n                                        headers: {\n                                            'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n                                        }\n                                    })\n                                        .then(response => {\n                                            if (response.data.resultCode === 0) {\n                                                dispatch(follow(u.id))\n                                            }\n                                            dispatch(toggleIsFollowing(false, u.id))\n                                        })\n                                }}\n                                          variant=\"contained\"\n                                          color=\"success\"\n                                          size='small'\n                                          disabled={isFollowing.some(id => id === u.id)}>Follow</Button>}\n                        </div>\n                        <span>{u.name}</span>\n                        <span>{u.status}</span>\n                    </div>\n                )\n            })}\n        </div>\n    </div>\n})\n\n","import {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../../redux/redux-store\";\nimport {\n    setCurrentPage,\n    setTotalUsersCount,\n    setUsers, toggleIsFetching,\n    UserType\n} from \"../../redux/users-reducer\";\nimport React, {useCallback, useEffect} from \"react\";\nimport {Users} from \"./Users\";\nimport {CircularProgress, Pagination} from \"@mui/material\";\nimport {usersAPI} from \"../../api/api\";\n\n\nexport const UsersContainer = React.memo(() => {\n    const dispatch = useDispatch()\n    const isFetching = useSelector<RootStateType, boolean>(state => state.usersPage.isFetching)\n    const isFollowing = useSelector<RootStateType, Array<number>>(state => state.usersPage.isFollowing)\n    const usersList = useSelector<RootStateType, Array<UserType>>(state => state.usersPage.usersList)\n    const pageSize = useSelector<RootStateType, number>(state => state.usersPage.pageSize)\n    const totalUsersCount = useSelector<RootStateType, number>(state => state.usersPage.totalUsersCount)\n    const currentPage = useSelector<RootStateType, number>(state => state.usersPage.currentPage)\n\n\n    useEffect(() => {\n        dispatch(toggleIsFetching(true))\n        usersAPI.getUsers(currentPage, pageSize)\n            .then(response => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(response.items))\n                dispatch(setTotalUsersCount(response.totalCount))\n            })\n    }, [])\n\n    const changeCurrentPage = useCallback((pageNumber: number) => {\n        dispatch(setCurrentPage(pageNumber))\n        dispatch(toggleIsFetching(true))\n        usersAPI.getUsers(pageNumber, pageSize)\n            .then(response => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(response.items))\n            })\n    }, [])\n\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\n\n    return <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\n        <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n        }}>\n            <Pagination count={pagesCount} color=\"primary\" onChange={(e, value) => changeCurrentPage(value)}/>\n        </div>\n        {isFetching ? <CircularProgress style={{marginTop: '30px', marginBottom: '20px'}}/> :\n            <Users usersList={usersList} isFollowing={isFollowing}/>}\n    </div>\n\n})\n\n\n","import React from \"react\";\nimport s from './UserDescription.module.scss'\nimport {UserDescriptionType} from \"../../../redux/profile-reducer\";\nimport {Avatar} from \"@mui/material\";\n\ntype UserDescriptionPropsType = {\n    profile: UserDescriptionType\n}\n\nfunction UserDescription(props: UserDescriptionPropsType) {\n    return (\n        <div className={s.userDescription}>\n            <h3>{props.profile.fullName}</h3>\n            <Avatar alt={props.profile.fullName} src={props.profile.photos?.large} sx={{width: 150, height: 150}} style={{marginBottom: '15px'}}/>\n            <span>{props.profile.aboutMe}</span>\n        </div>\n    )\n}\n\nexport default UserDescription","import { Avatar } from '@mui/material'\nimport s from './Post.module.scss'\n\nexport type PostType = {\n    id: string\n    post: string\n    likesCount: number\n}\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.post}>\n                    <Avatar src=\"\" sx={{width: 50, height: 50}}/>\n                    <span>{props.post}</span>\n                    <span>Likes: {props.likesCount}</span>\n        </div>\n    )\n}\n\nexport default Post","import { connect } from \"react-redux\";\nimport {addPost, changePost, ProfilePageType} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {RootStateType} from \"../../../redux/redux-store\";\n\ntype MapStateToPropsType = {\n    profilePage: ProfilePageType\n}\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, {\n    changePost,\n    addPost,\n})(MyPosts)\n\n","import Post from \"./Post/Post\";\nimport s from './MyPosts.module.scss'\nimport {KeyboardEvent, ChangeEvent} from \"react\";\nimport TextField from '@mui/material/TextField';\nimport React from \"react\";\nimport {ProfilePageType} from \"../../../redux/profile-reducer\";\nimport { IconButton } from \"@mui/material\";\nimport { PostAdd } from \"@mui/icons-material\";\n\ntype MyPostType = {\n    profilePage: ProfilePageType\n    addPost: (value: string) => void\n    changePost: (value: string) => void\n\n}\n\nexport const MyPosts = (props: MyPostType) => {\n    const postsElements = props.profilePage.posts.map(m => <Post key={m.id} id={m.id} post={m.post}\n                                                                 likesCount={m.likesCount}/>)\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changePost(e.currentTarget.value)\n    };\n\n    const addPost = () => {\n        const newPost = props.profilePage.postText.trim()\n        if (newPost) {\n            props.addPost(newPost)\n        }\n    }\n    const keyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            addPost()\n        }\n    }\n    return (\n        <div className={s.myPosts}>\n            <h3>All posts</h3>\n            <div className={s.postForm}>\n                <TextField\n                    id=\"outlined-multiline-flexible\"\n                    label=\"What's new?\"\n                    multiline\n                    maxRows={4}\n                    value={props.profilePage.postText}\n                    onChange={changeHandler}\n                    onKeyPress={keyPressHandler}/>\n                <IconButton onClick={addPost} style={{marginLeft: '5px'}}>\n                    <PostAdd color=\"primary\"/>\n                </IconButton>\n            </div>\n            {postsElements}\n        </div>\n    )\n}","import s from './Profile.module.scss'\nimport React from \"react\";\nimport UserDescription from './UserDescription/UserDescription';\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\nimport {UserDescriptionType} from \"../../redux/profile-reducer\";\n\ntype ProfileType = {\n    profile: UserDescriptionType\n}\n\nexport function Profile({profile}: ProfileType) {\n    return <div className={s.profile}>\n        <UserDescription profile={profile}/>\n        <MyPostsContainer/>\n    </div>\n\n\n}","import s from './Profile.module.scss'\nimport React, {useEffect} from \"react\";\nimport {Profile} from './Profile';\nimport {setUserProfile, UserDescriptionType} from \"../../redux/profile-reducer\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {RootStateType} from \"../../redux/redux-store\";\n\nimport axios from \"axios\";\n\nimport {useParams} from 'react-router-dom';\n\n\nexport const ProfileContainer = React.memo(() => {\n    const dispatch = useDispatch()\n    const profile = useSelector<RootStateType, UserDescriptionType>(state => state.profilePage.profile)\n    let {userId} = useParams()\n    useEffect(() => {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\n            .then(response => {\n                dispatch(setUserProfile(response.data))\n            })\n    }, [])\n\n\n    return (\n        <div className={s.profile}>\n            <Profile profile={profile}/>\n        </div>\n    )\n\n})\n\n\n","import React from 'react';\nimport {Route, Routes} from 'react-router-dom';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ProfileContainer} from './components/Profile/ProfileContainer';\n\nexport const AppRoutes = () => {\n    return (\n        <div>\n            <Routes>\n                <Route path={'/profile/:userId'}\n                       element={<ProfileContainer/>}/>\n                <Route path={'/dialogs'}\n                       element={<DialogsContainer/>}/>\n                <Route path={'/users'}\n                       element={<UsersContainer/>}/>\n                <Route\n                    path=\"*\"\n                    element={\n                        <main>\n                            <p>There's nothing here!</p>\n                        </main>\n                    }\n                />\n            </Routes>\n        </div>\n    );\n};\n\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\ntype HeaderType = {\n    isAuth: boolean\n    login: string\n}\n\nexport const Header = React.memo(({isAuth, login}: HeaderType) => {\n    return (\n        <Box sx={{ flexGrow: 1, mb: 2 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        SOCIAL NETWORK\n                    </Typography>\n                    {isAuth ? login : <Button color=\"inherit\">Login</Button>}\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n})","import * as React from 'react';\nimport {Header} from \"./Header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport axios from \"axios\";\nimport {setAuthUserData} from \"../../redux/auth-reducer\";\nimport {RootStateType} from \"../../redux/redux-store\";\n\nexport const HeaderContainer = React.memo(() => {\n    const isAuth = useSelector<RootStateType, boolean>(state => state.auth.isAuth)\n    const login = useSelector<RootStateType, string>(state => state.auth.data.login)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {withCredentials: true})\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let {id, login, email} = response.data.data\n                    dispatch(setAuthUserData(id, login, email))\n                }\n            })\n    }, [])\n    return <Header isAuth={isAuth} login={login}/>\n})\n","import React from 'react'\nimport './App.module.scss'\nimport s from './App.module.scss'\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport {AppRoutes} from \"./AppRoutes\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\n\nexport const App = () => {\n    return (\n        <div className={s.app}>\n            <HeaderContainer/>\n            <Container fixed maxWidth=\"lg\">\n                <Grid container spacing={2}>\n                    <Grid item xs={3}>\n                        <Paper style={{padding: '15px 0'}}>\n                            <Navbar/>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Paper style={{padding: '15px 15px'}}>\n                            <AppRoutes/>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './index.scss'\nimport {store} from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport {App} from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__10UeP\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__15I9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"messagesItems\":\"Dialogs_messagesItems__3JX3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1nzJQ\",\"active\":\"DialogItem_active__JdILs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3CRqz\",\"user\":\"Users_user__1d1r4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2AZpm\",\"postForm\":\"MyPosts_postForm__1ywSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__27Afv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userDescription\":\"UserDescription_userDescription__37qmJ\"};"],"sourceRoot":""}