{"version":3,"sources":["redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/users-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Profile/UserDescription/UserDescription.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","Error404.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Users/UsersContainer.tsx","components/Users/Users.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Profile/MyPosts/Post/Post.module.scss","components/Navbar/Navbar.module.scss","components/Profile/Profile.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Dialogs/Message/Message.module.scss","components/Users/Users.module.scss"],"names":["initialState","posts","id","v1","post","likesCount","postText","dialogs","name","messages","message","messageText","usersList","rootReducer","combineReducers","profilePage","state","action","type","newPost","dialogsPage","newMessage","usersPage","map","u","followed","users","store","createStore","Navbar","className","s","navbar","to","activeClassName","active","Header","Box","sx","flexGrow","mb","AppBar","position","Toolbar","Typography","variant","component","Button","color","UserDescription","Post","props","postImg","postAvatar","src","postPost","postLikes","MyPostsContainer","connect","dispatch","changePost","value","addPost","postsElements","m","trim","myPosts","width","noValidate","autoComplete","TextField","label","multiline","maxRows","onChange","e","currentTarget","onKeyPress","ctrlKey","key","Stack","direction","spacing","onClick","Profile","myPage","userDescription","Error404","style","top","left","height","backgroundColor","fontSize","display","alignItems","justifyContent","DialogItem","path","dialogItem","Message","DialogsContainer","changeMessage","sendMessage","dialogsElements","d","messagesElements","dialogsItems","messagesItems","endIcon","UsersContainer","follow","followAC","unfollow","unfollowAC","setUsers","setUsersAC","length","fullName","status","location","city","county","avatar","usersElements","Grid","item","Avatar","alt","size","container","Routes","exact","render","Item","styled","Paper","theme","typography","body2","padding","textAlign","palette","text","secondary","App","app","Container","fixed","maxWidth","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.02562629.chunk.js","sourcesContent":["import {PostType} from \"../components/Profile/MyPosts/Post/Post\";\nimport {v1} from \"uuid\";\n\nexport type ProfilePageType = {\n    posts: Array<PostType>,\n    postText: string\n}\n\nconst initialState = {\n    posts: [\n        {id: v1(), post: 'Hello!', likesCount: 3},\n        {id: v1(), post: 'JS!', likesCount: 9}\n    ],\n    postText: ''\n}\n\nexport type ProfileActionsTypes = AddPostACType | ChangePostACType\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionsTypes): ProfilePageType => {\n    switch (action.type) {\n        case 'ADD-POST':\n            const newPost: PostType = {id: v1(), post: action.postText, likesCount: 0}\n            return {...state, posts: [newPost, ...state.posts], postText: ''}\n        case 'CHANGE-POST-TEXT':\n            return {...state, postText: action.postText}\n        default:\n            return state\n    }\n}\n\ntype AddPostACType = ReturnType<typeof addPostAC>\nexport const addPostAC = (postText: string) => {\n    return {\n        type: 'ADD-POST',\n        postText\n    } as const\n}\n\nexport type ChangePostACType = ReturnType<typeof changePostAC>\nexport const changePostAC = (postText: string) => {\n    return {\n        type: 'CHANGE-POST-TEXT',\n        postText\n    } as const\n}","import {MessageType} from \"../components/Dialogs/Message/Message\";\nimport {v1} from \"uuid\";\nimport {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\n\nexport type DialogsPageType = {\n    dialogs: Array<DialogItemType>\n    messages: Array<MessageType>\n    messageText: string\n}\nconst initialState = {\n    dialogs: [\n        {id: v1(), name: 'Alexander'},\n        {id: v1(), name: 'Alena'}\n    ],\n    messages: [\n        {id: v1(), message: 'Hello!'},\n        {id: v1(), message: 'How are you?'}\n    ],\n    messageText: ''\n}\n\nexport type DialogsActionsTypes = SendMessageACType | ChangeMessageTextACType\n\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: DialogsActionsTypes): DialogsPageType => {\n    switch (action.type) {\n        case 'SEND-MESSAGE':\n            const newMessage: MessageType = {id: v1(), message: action.messageText}\n            return {...state, messages: [...state.messages, newMessage], messageText: ''}\n        case 'CHANGE-MESSAGE-TEXT':\n            return {...state, messageText: action.messageText}\n        default:\n            return state\n    }\n}\n\ntype SendMessageACType = ReturnType<typeof sendMessageAC>\nexport const sendMessageAC = (messageText: string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        messageText\n    } as const\n}\n\ntype ChangeMessageTextACType = ReturnType<typeof changeMessageAC>\nexport const changeMessageAC = (messageText: string) => {\n    return {\n        type: 'CHANGE-MESSAGE-TEXT',\n        messageText\n    } as const\n}","export type UserType = {\n    id: string\n    followed: boolean\n    fullName: string\n    status: string\n    location: {\n        city: string\n        county: string\n    },\n    avatar: string\n}\n\nexport type UsersPageType = {\n    usersList: Array<UserType>\n}\n\nconst initialState = {\n    usersList: []\n}\n\nexport type UsersActionsTypes = FollowACType | UnfollowACType | SetUsersACType\n\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersActionsTypes): UsersPageType => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: true} : u)}\n        case 'UNFOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: false} : u)}\n        case 'SET-USERS':\n            return {...state, usersList: [...state.usersList, ...action.users]}\n        default:\n            return state\n    }\n}\n\ntype FollowACType = ReturnType<typeof followAC>\nexport const followAC = (id: string) => {\n    return {\n        type: 'FOLLOW',\n        id\n    } as const\n}\n\ntype UnfollowACType = ReturnType<typeof unfollowAC>\nexport const unfollowAC = (id: string) => {\n    return {\n        type: 'UNFOLLOW',\n        id\n    } as const\n}\n\ntype SetUsersACType = ReturnType<typeof setUsersAC>\nexport const setUsersAC = (users: Array<UserType>) => {\n    return {\n        type: 'SET-USERS',\n        users\n    } as const\n}\n\n","import {combineReducers, createStore} from \"redux\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {dialogsReducer} from \"./dialogs-reducer\";\nimport {usersReducer} from \"./users-reducer\";\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer\n})\n\nexport type StateType = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer)\n\n\n\n","import s from './Navbar.module.scss'\nimport React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.navbar}>\n            <div>\n               <NavLink to='/mypage' activeClassName={s.active}>\n                   My Page\n               </NavLink>\n            </div>\n            <div>\n                <NavLink to='/dialogs' activeClassName={s.active}>\n                    Messages\n                </NavLink>\n            </div>\n            <div>\n                <NavLink to='/users' activeClassName={s.active}>\n                    Find Users\n                </NavLink>\n            </div>\n        </nav>\n    )\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nexport default function Header() {\n    return (\n        <Box sx={{ flexGrow: 1, mb: 2 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        SOCIAL NETWORK\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}","import React from \"react\";\nimport s from './UserDescription.module.scss'\n\nfunction UserDescription() {\n    return (\n        <div className={s.UserDescription}>\n            User Description\n        </div>\n    )\n}\n\nexport default UserDescription","import s from './Post.module.scss'\n\nexport type PostType = {\n    id: string\n    post: string\n    likesCount: number\n}\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.post}>\n                <div className={s.postImg}>\n                    <img className={s.postAvatar} src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\"/>\n                </div>\n                <div className={s.postPost}>\n                    <span>{props.post}</span>\n                </div>\n                <div className={s.postLikes}>\n                    <span>Likes: {props.likesCount}</span>\n                </div>\n        </div>\n    )\n}\n\nexport default Post","import { connect } from \"react-redux\";\nimport {addPostAC, changePostAC, ProfilePageType} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {StateType} from \"../../../redux/redux-store\";\nimport { Dispatch } from 'redux';\n\ntype MapStateToPropsType = {\n    profilePage: ProfilePageType\n}\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\ntype MapDispatchToPropsType = {\n    changePost: (value: string) => void\n    addPost: (value: string) => void\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        changePost: (value: string) => {\n            const action = changePostAC(value)\n            dispatch(action)\n        },\n        addPost: (value: string) => {\n            const action = addPostAC(value)\n            dispatch(action)\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n","import Post from \"./Post/Post\";\nimport s from './MyPosts.module.scss'\nimport {KeyboardEvent, ChangeEvent} from \"react\";\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport React from \"react\";\nimport {ProfilePageType} from \"../../../redux/profile-reducer\";\n\ntype MyPostType = {\n    profilePage: ProfilePageType\n    addPost: (value: string) => void\n    changePost: (value: string) => void\n\n}\n\nexport const MyPosts = (props: MyPostType) => {\n    const postsElements = props.profilePage.posts.map(m => <Post key={m.id} id={m.id} post={m.post} likesCount={m.likesCount}/>)\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changePost(e.currentTarget.value)\n    };\n\n    const addPost = () => {\n        const newPost = props.profilePage.postText.trim()\n        if (newPost) {\n            props.addPost(newPost)\n        }\n    }\n    const keyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            addPost()\n        }\n    }\n    return (\n        <div className={s.myPosts}>\n            <div>\n                <h3>All posts</h3>\n            </div>\n            <div>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': {mb: 1, width: '100%'},\n                    }}\n                    noValidate\n                    autoComplete=\"off\">\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"What's new?\"\n                        multiline\n                        maxRows={4}\n                        value={props.profilePage.postText}\n                        onChange={changeHandler}\n                        onKeyPress={keyPressHandler}/>\n\n                </Box>\n                <Stack direction=\"row\" spacing={1}>\n                    <Button variant=\"contained\" onClick={addPost}>\n                        Add post\n                    </Button>\n                </Stack>\n            </div>\n            <div>\n                {postsElements}\n            </div>\n        </div>\n    )\n}","import s from './Profile.module.scss'\nimport React from \"react\";\nimport UserDescription from './UserDescription/UserDescription';\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\n\n\n\nexport function Profile() {\n    return (\n        <div className={s.myPage}>\n            <div className={s.userDescription}>\n                <UserDescription/>\n            </div>\n            <div className={s.myPosts}>\n                <MyPostsContainer />\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const Error404 = () => {\n    return (\n        <div style={{\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            color: 'black',\n            backgroundColor: '#F5F5F5',\n            fontSize: '25px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n\n\n        }}>\n            Page not found\n        </div>\n    );\n};\n\n","import s from \"./DialogItem.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nexport type DialogItemType = {\n    id: string\n    name: string\n}\nexport const DialogItem = (props: DialogItemType) => {\n    let path = `/dialogs/${props.id}`\n\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}","import s from \"./Message.module.scss\";\nimport React from \"react\";\n\nexport type MessageType = {\n    id: string\n    message: string\n}\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}","import {connect} from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {changeMessageAC, DialogsPageType, sendMessageAC} from '../../redux/dialogs-reducer';\nimport { StateType } from '../../redux/redux-store';\nimport {Dialogs} from \"./Dialogs\";\n\ntype MapStateToPropsType = {\n    dialogsPage: DialogsPageType\n}\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\ntype MapDispatchToPropsType = {\n    changeMessage: (value: string) => void\n    sendMessage: (value: string) => void\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        changeMessage: (value: string) => {\n            const action = changeMessageAC(value)\n            dispatch(action)\n        },\n        sendMessage: (value: string) => {\n            const action = sendMessageAC(value)\n            dispatch(action)\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Dialogs.module.scss'\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\n\ntype DialogsType = {\n    dialogsPage: DialogsPageType\n    sendMessage: (value: string) => void\n    changeMessage: (value: string) => void\n}\n\nexport const Dialogs = (props: DialogsType) => {\n\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n    const messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changeMessage(e.currentTarget.value);\n    };\n\n    const sendMessage = () => {\n        const newMessage = props.dialogsPage.messageText.trim()\n        if (newMessage) {\n            props.sendMessage(newMessage)\n        }\n    }\n    const keyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            sendMessage()\n        }\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messagesItems}>\n                {messagesElements}\n                <div>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': {mb: 1, width: '100%'},\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"Type message\"\n                            multiline\n                            maxRows={4}\n                            value={props.dialogsPage.messageText}\n                            onChange={changeHandler}\n                            onKeyPress={keyPressHandler}/>\n\n                    </Box>\n                    <Stack direction=\"row\" spacing={1}>\n                        <Button variant=\"contained\" endIcon={<SendIcon/>} onClick={sendMessage}>\n                            Send\n                        </Button>\n                    </Stack>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import {connect} from \"react-redux\";\nimport {Dispatch} from 'redux';\nimport {StateType} from \"../../redux/redux-store\";\nimport {followAC, setUsersAC, unfollowAC, UsersPageType, UserType} from \"../../redux/users-reducer\";\nimport {Users} from \"./Users\";\n\ntype MapStateToPropsType = {\n    usersPage: UsersPageType\n}\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        usersPage: state.usersPage\n    }\n}\n\ntype MapDispatchToPropsType = {\n    follow: (id: string) => void\n    unfollow: (id: string) => void\n    setUsers: (users: Array<UserType>) => void\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        follow: (id: string) => {\n            const action = followAC(id)\n            dispatch(action)\n        },\n        unfollow: (id: string) => {\n            const action = unfollowAC(id)\n            dispatch(action)\n        },\n        setUsers: (users: Array<UserType>) => {\n            const action = setUsersAC(users)\n            dispatch(action)\n        }\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\n\n","import {Avatar, Button, Grid} from '@mui/material';\nimport React from 'react';\nimport {UsersPageType, UserType} from \"../../redux/users-reducer\";\nimport s from './Users.module.scss'\nimport {v1} from \"uuid\";\n\ntype UsersType = {\n    usersPage: UsersPageType\n    follow: (id: string) => void\n    unfollow: (id: string) => void\n    setUsers: (users: Array<UserType>) => void\n}\n\nexport const Users = (props: UsersType) => {\n    const followHandler = (id: string) => props.follow(id)\n    const unFollowHandler = (id: string) => props.unfollow(id)\n    if (props.usersPage.usersList.length === 0) {\n        props.setUsers([\n            {\n                id: v1(),\n                followed: true,\n                fullName: 'Alexander',\n                status: 'React Dev',\n                location: {city: 'Tula', county: 'Russia'},\n                avatar: 'https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg'\n            },\n            {\n                id: v1(),\n                followed: false,\n                fullName: 'Alena',\n                status: 'Lashmaker',\n                location: {city: 'Tula', county: 'Russia'},\n                avatar: 'https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg'\n            }\n        ])\n    }\n\n    const usersElements = props.usersPage.usersList.map(u => {\n        return (\n            <Grid item>\n                <div key={u.id} className={s.users}>\n\n                    <div>\n                        <Avatar alt={u.fullName} src={u.avatar} sx={{width: 100, height: 100}}/>\n                    </div>\n                    <div>\n                        {u.followed\n                            ? <Button onClick={() => unFollowHandler(u.id)} variant=\"contained\" color=\"error\"\n                                      size='small'>Unfollow</Button>\n                            : <Button onClick={() => followHandler(u.id)} variant=\"contained\" color=\"success\"\n                                      size='small'>Follow</Button>}\n                    </div>\n                    <div>\n                        <span>{u.fullName}</span>\n                    </div>\n                    <div>\n                        <span>{u.status}</span>\n                    </div>\n                    <div>\n                        <span>{`${u.location.county}, ${u.location.city}`}</span>\n                    </div>\n                </div>\n            </Grid>\n        )\n    })\n    return (\n        <div>\n            <Grid container>\n                {usersElements}\n            </Grid>\n        </div>\n    );\n};\n\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Error404} from './Error404';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\n\nconst path = {\n    default: '/',\n    socialNetwork: '/social-network',\n    myPage: '/mypage',\n    dialogs: '/dialogs',\n    users: '/users'\n}\n\nexport const Routes = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path={path.default} exact\n                       render={() => <Profile />}/>\n                <Route path={path.socialNetwork} exact\n                       render={() => <Profile />}/>\n                <Route path={path.myPage}\n                       render={() => <Profile />}/>\n                <Route path={path.dialogs}\n                       render={() => <DialogsContainer />}/>\n                <Route path={path.users}\n                       render={() => <UsersContainer />}/>\n                <Route render={() => <Error404/>}/>\n            </Switch>\n        </div>\n    );\n};\n\n","import React from 'react'\nimport './App.module.scss'\nimport s from './App.module.scss'\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {styled} from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Header from './components/Header/Header';\nimport {Routes} from \"./Routes\";\n\nconst Item = styled(Paper)(({theme}) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\n\nexport const App = () => {\n    return (\n        <div className={s.app}>\n            <Header/>\n            <Container fixed maxWidth=\"lg\">\n                <Grid container spacing={2}>\n                    <Grid item xs={3}>\n                        <Item>\n                            <Navbar/>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Item>\n                            <Routes />\n                        </Item>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './index.scss'\nimport {store} from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport {App} from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1jere\",\"postImg\":\"Post_postImg__8Hx5x\",\"postAvatar\":\"Post_postAvatar__SUu-U\",\"postPost\":\"Post_postPost__17SJC\",\"postLikes\":\"Post_postLikes__2EER6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__10UeP\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPage\":\"Profile_myPage__3sOd9\",\"userDescription\":\"Profile_userDescription__3BgNu\",\"myPosts\":\"Profile_myPosts__1820s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"messagesItems\":\"Dialogs_messagesItems__3JX3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1nzJQ\",\"active\":\"DialogItem_active__JdILs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2AZpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__27Afv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3CRqz\"};"],"sourceRoot":""}