{"version":3,"sources":["redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/UserDescription/UserDescription.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","Error404.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Profile/MyPosts/Post/Post.module.scss","components/Navbar/Navbar.module.scss","components/Profile/Profile.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Dialogs/Message/Message.module.scss"],"names":["ADD_POST","initialState","posts","id","v1","post","likesCount","SEND_MESSAGE","dialogs","name","messages","message","reducers","combineReducers","profilePage","state","action","type","newPost","postText","push","dialogsPage","newMessage","messageText","store","createStore","Navbar","className","s","navbar","to","activeClassName","active","Header","Box","sx","flexGrow","mb","AppBar","position","Toolbar","Typography","variant","component","Button","color","Post","props","postImg","postAvatar","src","postPost","postLikes","MyPosts","postsElements","map","m","useState","value","setValue","addPost","trim","dispatch","myPosts","width","noValidate","autoComplete","TextField","label","multiline","maxRows","onChange","e","currentTarget","onKeyPress","ctrlKey","key","Stack","direction","spacing","endIcon","onClick","UserDescription","Profile","myPage","userDescription","DialogItem","path","dialogItem","Message","Dialogs","dialogsElements","d","messagesElements","sendMessage","dialogsItems","messagesItems","Error404","style","top","left","height","backgroundColor","fontSize","display","alignItems","justifyContent","Routes","exact","render","Item","styled","Paper","theme","typography","body2","padding","textAlign","palette","text","secondary","App","app","Container","fixed","maxWidth","Grid","container","item","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","ReactDOM","bind","document","getElementById","getState","subscribe","module","exports"],"mappings":"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","file":"static/js/main.5ba08308.chunk.js","sourcesContent":["import {PostType} from \"../components/Profile/MyPosts/Post/Post\";\nimport {v1} from \"uuid\";\nimport { ActionsTypes } from \"./redux-store\";\n\nconst ADD_POST = 'ADD-POST'\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n}\n\nconst initialState = {\n    posts: [\n        {id: v1(), post: 'Hello!', likesCount: 3},\n        {id: v1(), post: 'JS!', likesCount: 9}\n    ]\n}\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case ADD_POST:\n            const newPost: PostType = {id: v1(), post: action.postText, likesCount: 0}\n            state.posts.push(newPost)\n            return state\n        default:\n            return state\n    }\n}\n\nexport const AddPost = (postText: string) => {\n    return {\n        type: ADD_POST,\n        postText: postText\n    } as const\n}","\nimport {MessageType} from \"../components/Dialogs/Message/Message\";\nimport {v1} from \"uuid\";\nimport {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\nimport { ActionsTypes } from \"./redux-store\";\n\nconst SEND_MESSAGE = 'SEND-MESSAGE'\n\n\nexport type DialogsPageType = {\n    dialogs: Array<DialogItemType>\n    messages: Array<MessageType>\n}\nconst initialState = {\n    dialogs: [\n        {id: v1(), name: 'Alexander'},\n        {id: v1(), name: 'Alena'}\n    ],\n    messages: [\n        {id: v1(), message: 'Hello!'},\n        {id: v1(), message: 'How are you?'}\n    ]\n}\n\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            const newMessage: MessageType = {id: v1(), message: action.messageText}\n            state.messages.push(newMessage)\n            return state\n        default:\n            return state\n    }\n}\n\nexport const SendMessage = (messageText: string) => {\n    return {\n        type: SEND_MESSAGE,\n        messageText: messageText\n    } as const\n}","import {combineReducers, createStore} from \"redux\";\nimport {AddPost, ProfilePageType, profileReducer} from \"./profile-reducer\";\nimport {DialogsPageType, dialogsReducer, SendMessage} from \"./dialogs-reducer\";\n\nexport type ActionsTypes = ReturnType<typeof AddPost> | ReturnType<typeof SendMessage>\nexport type StateType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogsPageType\n}\n\nconst reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer\n})\n\nexport const store = createStore(reducers)","import s from './Navbar.module.scss'\nimport React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.navbar}>\n            <div>\n               <NavLink to='/mypage' activeClassName={s.active}>\n                   My Page\n               </NavLink>\n            </div>\n            <div>\n                <NavLink to='/dialogs' activeClassName={s.active}>\n                    Messages\n                </NavLink>\n            </div>\n        </nav>\n    )\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nexport default function Header() {\n    return (\n        <Box sx={{ flexGrow: 1, mb: 2 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        SOCIAL NETWORK\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}","import s from './Post.module.scss'\n\nexport type PostType = {\n    id: string\n    post: string\n    likesCount: number\n}\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.post}>\n                <div className={s.postImg}>\n                    <img className={s.postAvatar} src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\"/>\n                </div>\n                <div className={s.postPost}>\n                    <span>{props.post}</span>\n                </div>\n                <div className={s.postLikes}>\n                    <span>Likes: {props.likesCount}</span>\n                </div>\n        </div>\n    )\n}\n\nexport default Post","import Post, {PostType} from \"./Post/Post\";\nimport s from './MyPosts.module.scss'\nimport {useState, KeyboardEvent, ChangeEvent} from \"react\";\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport {AddPost} from \"../../../redux/profile-reducer\";\nimport { ActionsTypes } from \"../../../redux/redux-store\";\n\ntype MyPostType = {\n    posts: Array<PostType>\n    dispatch: (action: ActionsTypes) => void\n}\n\nfunction MyPosts(props: MyPostType) {\n    const postsElements = props.posts.map(m => <Post key={m.id} id={m.id} post={m.post} likesCount={m.likesCount}/>)\n    const [value, setValue] = useState<string>('');\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value);\n    };\n\n    const addPost = () => {\n        if (value.trim()) {\n            props.dispatch(AddPost(value.trim()))\n            setValue('')\n        }\n    }\n    const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            addPost()\n        }\n    }\n    return (\n        <div className={s.myPosts}>\n            <div>\n                <h3>My posts</h3>\n            </div>\n            <div>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': {mb: 1, width: '100%'},\n                    }}\n                    noValidate\n                    autoComplete=\"off\">\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"What's new?\"\n                        multiline\n                        maxRows={4}\n                        value={value}\n                        onChange={handleChange}\n                        onKeyPress={handleKeyPress}/>\n\n                </Box>\n                <Stack direction=\"row\" spacing={1}>\n                    <Button variant=\"contained\" endIcon={<SendIcon/>} onClick={addPost}>\n                        Send\n                    </Button>\n                </Stack>\n            </div>\n            <div>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts","import React from \"react\";\nimport s from './UserDescription.module.scss'\n\nfunction UserDescription() {\n    return (\n        <div className={s.UserDescription}>\n            User Description\n        </div>\n    )\n}\n\nexport default UserDescription","import s from './Profile.module.scss'\nimport React from \"react\";\nimport MyPosts from './MyPosts/MyPosts';\nimport {PostType} from \"./MyPosts/Post/Post\";\nimport UserDescription from './UserDescription/UserDescription';\nimport { ActionsTypes } from '../../redux/redux-store';\n\ntype Profile = {\n    profilePage: {\n        posts: Array<PostType>\n    }\n    dispatch: (action: ActionsTypes) => void\n}\n\nexport function Profile(props: Profile) {\n    return (\n        <div className={s.myPage}>\n            <div className={s.userDescription}>\n                <UserDescription/>\n            </div>\n            <div className={s.myPosts}>\n                <MyPosts posts={props.profilePage.posts} dispatch={props.dispatch}/>\n            </div>\n        </div>\n    )\n}","import s from \"./DialogItem.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nexport type DialogItemType = {\n    id: string\n    name: string\n}\nexport const DialogItem = (props: DialogItemType) => {\n    let path = `/dialogs/${props.id}`\n\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}","import s from \"./Message.module.scss\";\nimport React from \"react\";\n\nexport type MessageType = {\n    id: string\n    message: string\n}\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport s from './Dialogs.module.scss'\nimport {DialogItem, DialogItemType} from \"./DialogItem/DialogItem\";\nimport {Message, MessageType} from \"./Message/Message\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { SendMessage } from '../../redux/dialogs-reducer';\nimport { ActionsTypes } from '../../redux/redux-store';\n\ntype DialogsType = {\n    dialogsPage: {\n        messages: Array<MessageType>\n        dialogs: Array<DialogItemType>\n    }\n    dispatch: (action: ActionsTypes) => void\n}\n\nfunction Dialogs(props: DialogsType) {\n\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n    const messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\n\n    const [value, setValue] = useState<string>('');\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value);\n    };\n\n    const sendMessage = () => {\n        if (value.trim()) {\n            props.dispatch(SendMessage(value.trim()))\n            setValue('')\n        }\n    }\n    const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            sendMessage()\n        }\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messagesItems}>\n                {messagesElements}\n                <div>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': {mb: 1, width: '100%'},\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"What's new?\"\n                            multiline\n                            maxRows={4}\n                            value={value}\n                            onChange={handleChange}\n                            onKeyPress={handleKeyPress}/>\n\n                    </Box>\n                    <Stack direction=\"row\" spacing={1}>\n                        <Button variant=\"contained\" endIcon={<SendIcon/>} onClick={sendMessage}>\n                            Send\n                        </Button>\n                    </Stack>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs","import React from 'react';\n\nexport const Error404 = () => {\n    return (\n        <div style={{\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            color: 'black',\n            backgroundColor: '#F5F5F5',\n            fontSize: '25px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n\n\n        }}>\n            Page not found\n        </div>\n    );\n};\n\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {Profile} from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {PostType} from \"./components/Profile/MyPosts/Post/Post\";\nimport {MessageType} from \"./components/Dialogs/Message/Message\";\nimport {DialogItemType} from \"./components/Dialogs/DialogItem/DialogItem\";\nimport {Error404} from './Error404';\nimport {ActionsTypes} from \"./redux/redux-store\";\n\ntype RoutesType = {\n    profilePage: {\n        posts: Array<PostType>\n    }\n    dialogsPage: {\n        messages: Array<MessageType>\n        dialogs: Array<DialogItemType>\n    }\n    dispatch: (action: ActionsTypes) => void\n}\n\nconst path = {\n    default: '/',\n    socialNetwork: '/social-network',\n    myPage: '/mypage',\n    dialogs: '/dialogs'\n}\n\nexport const Routes = (props: RoutesType) => {\n    return (\n        <div>\n            <Switch>\n                <Route path={path.default} exact\n                       render={() => <Profile profilePage={props.profilePage}\n                                              dispatch={props.dispatch}/>}/>\n                <Route path={path.socialNetwork} exact\n                       render={() => <Profile profilePage={props.profilePage}\n                                              dispatch={props.dispatch}/>}/>\n                <Route path={path.myPage}\n                       render={() => <Profile profilePage={props.profilePage}\n                                              dispatch={props.dispatch}/>}/>\n                <Route path={path.dialogs}\n                       render={() => <Dialogs dialogsPage={props.dialogsPage}\n                                              dispatch={props.dispatch}/>}/>\n                <Route render={() => <Error404/>}/>\n            </Switch>\n        </div>\n    );\n};\n\n","import React from 'react'\nimport './App.module.scss'\nimport s from './App.module.scss'\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {styled} from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Header from './components/Header/Header';\nimport {Routes} from \"./Routes\";\nimport { ActionsTypes, StateType } from './redux/redux-store';\n\nconst Item = styled(Paper)(({theme}) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\ntype AppType = {\n    state: StateType\n    dispatch: (action: ActionsTypes) => void\n}\n\nfunction App(props: AppType) {\n    return (\n        <div className={s.app}>\n            <Header/>\n            <Container fixed maxWidth=\"lg\">\n                <Grid container spacing={2}>\n                    <Grid item xs={3}>\n                        <Item>\n                            <Navbar/>\n                        </Item>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Item>\n                            <Routes dispatch={props.dispatch}\n                                    profilePage={props.state.profilePage}\n                                    dialogsPage={props.state.dialogsPage}/>\n                        </Item>\n                    </Grid>\n                </Grid>\n\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './index.scss'\nimport {StateType, store} from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter} from \"react-router-dom\"\n\n\nconst rerenderEntireTree = (state: StateType) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state} dispatch={store.dispatch.bind(store)}/>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState())\nstore.subscribe(() => {\n    const state = store.getState()\n    rerenderEntireTree(state)\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1jere\",\"postImg\":\"Post_postImg__8Hx5x\",\"postAvatar\":\"Post_postAvatar__SUu-U\",\"postPost\":\"Post_postPost__17SJC\",\"postLikes\":\"Post_postLikes__2EER6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__10UeP\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPage\":\"Profile_myPage__3sOd9\",\"userDescription\":\"Profile_userDescription__3BgNu\",\"myPosts\":\"Profile_myPosts__1820s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"messagesItems\":\"Dialogs_messagesItems__3JX3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1nzJQ\",\"active\":\"DialogItem_active__JdILs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2AZpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__27Afv\"};"],"sourceRoot":""}