{"version":3,"sources":["components/Dialogs/Message/Message.module.scss","components/Profile/UserDescription/UserDescription.module.scss","components/Profile/MyPosts/Post/Post.module.scss","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/users-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Profile/UserDescription/UserDescription.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","Error404.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Navbar/Navbar.module.scss","components/Profile/Profile.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Users/Users.module.scss","components/Profile/MyPosts/MyPosts.module.scss"],"names":["module","exports","initialState","posts","id","v1","post","likesCount","postText","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","userId","photos","small","large","addPost","type","changePost","dialogs","name","messages","message","messageText","usersList","pageSize","totalUsersCount","currentPage","isFetching","rootReducer","combineReducers","profilePage","state","action","newPost","dialogsPage","newMessage","usersPage","map","u","followed","users","store","createStore","Navbar","className","s","navbar","to","activeClassName","active","Header","Box","sx","flexGrow","mb","AppBar","position","Toolbar","Typography","variant","component","Button","color","DialogItem","props","path","dialogItem","Message","DialogsContainer","connect","dispatch","changeMessage","value","sendMessage","dialogsElements","d","messagesElements","m","trim","dialogsItems","messagesItems","width","noValidate","autoComplete","TextField","label","multiline","maxRows","onChange","e","currentTarget","onKeyPress","ctrlKey","key","Stack","direction","spacing","endIcon","onClick","Users","user","Avatar","alt","src","height","unfollow","size","follow","status","UsersContainer","setCurrentPage","pageNumber","toggleIsFetching","axios","get","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","pagesCount","Math","ceil","style","display","justifyContent","flexDirection","alignItems","Pagination","count","CircularProgress","marginTop","marginBottom","React","Component","UserDescription","userDescription","Post","MyPostsContainer","postsElements","myPosts","postForm","IconButton","marginLeft","PostAdd","Error404","top","left","backgroundColor","fontSize","Profile","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","Routes","render","App","app","Container","fixed","maxWidth","Grid","container","item","xs","Paper","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d412d2e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__27Afv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userDescription\":\"UserDescription_userDescription__37qmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1jere\"};","import {PostType} from \"../components/Profile/MyPosts/Post/Post\";\nimport {v1} from \"uuid\";\n\nexport type UserDescriptionType = {\n    aboutMe?: string\n    contacts?: {\n        facebook?: string\n        website?: string\n        vk?: string\n        twitter?: string\n        instagram?: string\n        youtube?: string\n        github?: string\n        mainLink?: string\n    },\n    lookingForAJob?: boolean\n    lookingForAJobDescription?: string\n    fullName?: string\n    userId?: number\n    photos?: {\n        small?: string\n        large?: string\n    }\n}\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    postText: string\n    profile: UserDescriptionType\n}\n\nconst initialState: ProfilePageType = {\n    posts: [\n        {id: v1(), post: 'Hello!', likesCount: 3},\n        {id: v1(), post: 'JS!', likesCount: 9}\n    ],\n    postText: '',\n    profile: {\n        aboutMe: \"я круто чувак 1001%\",\n        contacts: {\n            facebook: \"facebook.com\",\n            website: 'ffds',\n            vk: \"vk.com/dimych\",\n            twitter: \"https://twitter.com/@sdf\",\n            instagram: \"instagra.com/sds\",\n            youtube: 'fdsfds',\n            github: \"github.com\",\n            mainLink: 'fdsfds'\n        },\n        lookingForAJob: true,\n        lookingForAJobDescription: \"не ищу, а дурачусь\",\n        fullName: \"samurai dimych\",\n        userId: 2,\n        photos: {\n            small: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\n            large: \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\n        }\n    }\n}\n\n\n\nexport const profileReducer = (state = initialState, action: ProfileActionsTypes): ProfilePageType => {\n    switch (action.type) {\n        case 'ADD-POST':\n            const newPost: PostType = {id: v1(), post: action.postText, likesCount: 0}\n            return {...state, posts: [newPost, ...state.posts], postText: ''}\n        case 'CHANGE-POST-TEXT':\n            return {...state, postText: action.postText}\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n        default:\n            return state\n    }\n}\n\nexport type ProfileActionsTypes = AddPostType | ChangePostType | SetUserProfileType\n\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\nexport const setUserProfile = (profile: UserDescriptionType) => {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\n\ntype AddPostType = ReturnType<typeof addPost>\nexport const addPost = (postText: string) => {\n    return {\n        type: 'ADD-POST',\n        postText\n    } as const\n}\n\nexport type ChangePostType = ReturnType<typeof changePost>\nexport const changePost = (postText: string) => {\n    return {\n        type: 'CHANGE-POST-TEXT',\n        postText\n    } as const\n}","import {MessageType} from \"../components/Dialogs/Message/Message\";\nimport {v1} from \"uuid\";\nimport {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\n\nexport type DialogsPageType = {\n    dialogs: Array<DialogItemType>\n    messages: Array<MessageType>\n    messageText: string\n}\nconst initialState = {\n    dialogs: [\n        {id: v1(), name: 'Alexander'},\n        {id: v1(), name: 'Alena'}\n    ],\n    messages: [\n        {id: v1(), message: 'Hello!'},\n        {id: v1(), message: 'How are you?'}\n    ],\n    messageText: ''\n}\n\nexport type DialogsActionsTypes = SendMessageACType | ChangeMessageTextACType\n\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: DialogsActionsTypes): DialogsPageType => {\n    switch (action.type) {\n        case 'SEND-MESSAGE':\n            const newMessage: MessageType = {id: v1(), message: action.messageText}\n            return {...state, messages: [...state.messages, newMessage], messageText: ''}\n        case 'CHANGE-MESSAGE-TEXT':\n            return {...state, messageText: action.messageText}\n        default:\n            return state\n    }\n}\n\ntype SendMessageACType = ReturnType<typeof sendMessageAC>\nexport const sendMessageAC = (messageText: string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        messageText\n    } as const\n}\n\ntype ChangeMessageTextACType = ReturnType<typeof changeMessageAC>\nexport const changeMessageAC = (messageText: string) => {\n    return {\n        type: 'CHANGE-MESSAGE-TEXT',\n        messageText\n    } as const\n}","export type UserType = {\n    name: string\n    id: number\n    uniqueUrlName?: string\n    photos?: {\n        small?: string\n        large?: string\n    }\n    status?: string\n    followed: boolean\n}\n\nexport type UsersPageType = {\n    usersList: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n}\n\nconst initialState: UsersPageType = {\n    usersList: [],\n    pageSize: 6,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n}\n\nexport const usersReducer = (state = initialState, action: UsersActionsTypes): UsersPageType => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: true} : u)}\n        case 'UNFOLLOW':\n            return {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: false} : u)}\n        case 'SET-USERS':\n            return {...state, usersList: action.users}\n        case 'SET-CURRENT-PAGE':\n            return {...state, currentPage: action.currentPage}\n        case 'SET-TOTAL-USERS-COUNT':\n            return {...state, totalUsersCount: action.totalUsersCount}\n        case 'TOGGLE_IS_FETCHING':\n            return {...state, isFetching: action.isFetching}\n        default:\n            return state\n    }\n}\n\nexport type UsersActionsTypes =\n    FollowType\n    | UnfollowType\n    | SetUsersType\n    | SetCurrentPageType\n    | SetTotalUsersCountType\n    | ToggleIsFetchingType\n\ntype ToggleIsFetchingType = ReturnType<typeof toggleIsFetching>\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: 'TOGGLE_IS_FETCHING',\n        isFetching,\n    } as const\n}\n\ntype FollowType = ReturnType<typeof follow>\nexport const follow = (id: number) => {\n    return {\n        type: 'FOLLOW',\n        id,\n    } as const\n}\n\ntype UnfollowType = ReturnType<typeof unfollow>\nexport const unfollow = (id: number) => {\n    return {\n        type: 'UNFOLLOW',\n        id,\n    } as const\n}\n\ntype SetUsersType = ReturnType<typeof setUsers>\nexport const setUsers = (users: Array<UserType>) => {\n    return {\n        type: 'SET-USERS',\n        users,\n    } as const\n}\n\ntype SetCurrentPageType = ReturnType<typeof setCurrentPage>\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage,\n    } as const\n}\n\ntype SetTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\nexport const setTotalUsersCount = (totalUsersCount: number) => {\n    return {\n        type: 'SET-TOTAL-USERS-COUNT',\n        totalUsersCount,\n    } as const\n}\n\n","import {combineReducers, createStore} from \"redux\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {dialogsReducer} from \"./dialogs-reducer\";\nimport {usersReducer} from \"./users-reducer\";\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer\n})\n\nexport type StateType = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer)\n\n\n\n","import s from './Navbar.module.scss'\nimport React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.navbar}>\n            <div>\n               <NavLink to='/profile' activeClassName={s.active}>\n                   Profile\n               </NavLink>\n            </div>\n            <div>\n                <NavLink to='/dialogs' activeClassName={s.active}>\n                    Messages\n                </NavLink>\n            </div>\n            <div>\n                <NavLink to='/users' activeClassName={s.active}>\n                    Find Users\n                </NavLink>\n            </div>\n        </nav>\n    )\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nexport default function Header() {\n    return (\n        <Box sx={{ flexGrow: 1, mb: 2 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        SOCIAL NETWORK\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}","import s from \"./DialogItem.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nexport type DialogItemType = {\n    id: string\n    name: string\n}\nexport const DialogItem = (props: DialogItemType) => {\n    let path = `/dialogs/${props.id}`\n\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}","import s from \"./Message.module.scss\";\nimport React from \"react\";\n\nexport type MessageType = {\n    id: string\n    message: string\n}\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}","import {connect} from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {changeMessageAC, DialogsPageType, sendMessageAC} from '../../redux/dialogs-reducer';\nimport { StateType } from '../../redux/redux-store';\nimport {Dialogs} from \"./Dialogs\";\n\ntype MapStateToPropsType = {\n    dialogsPage: DialogsPageType\n}\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\ntype MapDispatchToPropsType = {\n    changeMessage: (value: string) => void\n    sendMessage: (value: string) => void\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        changeMessage: (value: string) => {\n            const action = changeMessageAC(value)\n            dispatch(action)\n        },\n        sendMessage: (value: string) => {\n            const action = sendMessageAC(value)\n            dispatch(action)\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Dialogs.module.scss'\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\n\ntype DialogsType = {\n    dialogsPage: DialogsPageType\n    sendMessage: (value: string) => void\n    changeMessage: (value: string) => void\n}\n\nexport const Dialogs = (props: DialogsType) => {\n\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n    const messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changeMessage(e.currentTarget.value);\n    };\n\n    const sendMessage = () => {\n        const newMessage = props.dialogsPage.messageText.trim()\n        if (newMessage) {\n            props.sendMessage(newMessage)\n        }\n    }\n    const keyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            sendMessage()\n        }\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messagesItems}>\n                {messagesElements}\n                <div>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': {mb: 1, width: '100%'},\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"Type message\"\n                            multiline\n                            maxRows={4}\n                            value={props.dialogsPage.messageText}\n                            onChange={changeHandler}\n                            onKeyPress={keyPressHandler}/>\n\n                    </Box>\n                    <Stack direction=\"row\" spacing={1}>\n                        <Button variant=\"contained\" endIcon={<SendIcon/>} onClick={sendMessage}>\n                            Send\n                        </Button>\n                    </Stack>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Avatar, Button, Pagination} from \"@mui/material\";\nimport s from \"./Users.module.scss\";\nimport {UserType} from \"../../redux/users-reducer\";\nimport { NavLink } from 'react-router-dom';\n\ntype UsersType = {\n    usersList: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n    setCurrentPage: (pageNumber: number) => void\n}\n\nexport const Users = (props: UsersType) => {\n    // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    return <div>\n        {/*<div style={{*/}\n        {/*    display: 'flex',*/}\n        {/*    justifyContent: 'center'*/}\n        {/*}}>*/}\n        {/*    <Pagination count={pagesCount} color=\"primary\" onChange={(e, value) => props.setCurrentPage(value)}/>*/}\n        {/*</div>*/}\n        <div className={s.users}>\n            {props.usersList.map(u => {\n                return (\n                    <div key={u.id} className={s.user}>\n                        <div>\n                            <NavLink to={'/profile/' + u.id}>\n                                <Avatar alt={u.name} src={u.photos?.small} sx={{width: 100, height: 100}}/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            {u.followed\n                                ? <Button onClick={() => props.unfollow(u.id)} variant=\"contained\"\n                                          color=\"error\"\n                                          size='small'>Unfollow</Button>\n                                : <Button onClick={() => props.follow(u.id)} variant=\"contained\"\n                                          color=\"success\"\n                                          size='small'>Follow</Button>}\n                        </div>\n                        <span>{u.name}</span>\n                        <span>{u.status}</span>\n                    </div>\n                )\n            })}\n        </div>\n    </div>\n};\n\n","import {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {\n    follow,\n    setCurrentPage,\n    setTotalUsersCount,\n    setUsers, toggleIsFetching,\n    unfollow,\n    UsersPageType,\n    UserType\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport {Users} from \"./Users\";\nimport {CircularProgress, Pagination} from \"@mui/material\";\n\ntype UsersContainerType = {\n    usersList: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n    setUsers: (users: Array<UserType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setTotalUsersCount: (totalUsersCount: number) => void\n    isFetching: boolean\n    toggleIsFetching: (isFetching: boolean) => void\n}\n\nclass UsersContainer extends React.Component<UsersContainerType, UsersPageType> {\n    // constructor(props: UsersContainerType) {\n    //     super(props);\n    //\n    // }\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n                this.props.setTotalUsersCount(response.data.totalCount)\n            })\n    }\n\n    setCurrentPage = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render() {\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\n        return <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n            }}>\n                <Pagination count={pagesCount} color=\"primary\" onChange={(e, value) => this.setCurrentPage(value)}/>\n            </div>\n            {this.props.isFetching ? <CircularProgress style={{marginTop: '30px', marginBottom: '20px'}}/> :\n                <Users totalUsersCount={this.props.totalUsersCount}\n                       pageSize={this.props.pageSize}\n                       currentPage={this.props.currentPage}\n                       setCurrentPage={this.setCurrentPage}\n                       usersList={this.props.usersList}\n                       follow={this.props.follow}\n                       unfollow={this.props.unfollow}\n                />}\n        </div>\n    }\n}\n\ntype MapStateToPropsType = {\n    usersList: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n}\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        usersList: state.usersPage.usersList,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    toggleIsFetching,\n})(UsersContainer)\n\n","import React from \"react\";\nimport s from './UserDescription.module.scss'\nimport {UserDescriptionType} from \"../../../redux/profile-reducer\";\nimport {Avatar} from \"@mui/material\";\n\ntype UserDescriptionPropsType = {\n    profile: UserDescriptionType\n}\n\nfunction UserDescription(props: UserDescriptionPropsType) {\n    return (\n        <div className={s.userDescription}>\n            <h3>{props.profile.fullName}</h3>\n            <Avatar alt={props.profile.fullName} src={props.profile.photos?.large} sx={{width: 150, height: 150}} style={{marginBottom: '15px'}}/>\n            <span>{props.profile.aboutMe}</span>\n        </div>\n    )\n}\n\nexport default UserDescription","import { Avatar } from '@mui/material'\nimport s from './Post.module.scss'\n\nexport type PostType = {\n    id: string\n    post: string\n    likesCount: number\n}\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.post}>\n                    <Avatar src=\"\" sx={{width: 50, height: 50}}/>\n                    <span>{props.post}</span>\n                    <span>Likes: {props.likesCount}</span>\n        </div>\n    )\n}\n\nexport default Post","import { connect } from \"react-redux\";\nimport {addPost, changePost, ProfilePageType} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {StateType} from \"../../../redux/redux-store\";\n\ntype MapStateToPropsType = {\n    profilePage: ProfilePageType\n}\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, {\n    changePost,\n    addPost,\n})(MyPosts)\n\n","import Post from \"./Post/Post\";\nimport s from './MyPosts.module.scss'\nimport {KeyboardEvent, ChangeEvent} from \"react\";\nimport TextField from '@mui/material/TextField';\nimport React from \"react\";\nimport {ProfilePageType} from \"../../../redux/profile-reducer\";\nimport { IconButton } from \"@mui/material\";\nimport { PostAdd } from \"@mui/icons-material\";\n\ntype MyPostType = {\n    profilePage: ProfilePageType\n    addPost: (value: string) => void\n    changePost: (value: string) => void\n\n}\n\nexport const MyPosts = (props: MyPostType) => {\n    const postsElements = props.profilePage.posts.map(m => <Post key={m.id} id={m.id} post={m.post}\n                                                                 likesCount={m.likesCount}/>)\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changePost(e.currentTarget.value)\n    };\n\n    const addPost = () => {\n        const newPost = props.profilePage.postText.trim()\n        if (newPost) {\n            props.addPost(newPost)\n        }\n    }\n    const keyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            addPost()\n        }\n    }\n    return (\n        <div className={s.myPosts}>\n            <h3>All posts</h3>\n            <div className={s.postForm}>\n                <TextField\n                    id=\"outlined-multiline-flexible\"\n                    label=\"What's new?\"\n                    multiline\n                    maxRows={4}\n                    value={props.profilePage.postText}\n                    onChange={changeHandler}\n                    onKeyPress={keyPressHandler}/>\n                <IconButton onClick={addPost} style={{marginLeft: '5px'}}>\n                    <PostAdd color=\"primary\"/>\n                </IconButton>\n            </div>\n            {postsElements}\n        </div>\n    )\n}","import React from 'react';\n\nexport const Error404 = () => {\n    return (\n        <div style={{\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            color: 'black',\n            backgroundColor: '#F5F5F5',\n            fontSize: '25px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n\n\n        }}>\n            Page not found\n        </div>\n    );\n};\n\n","import s from './Profile.module.scss'\nimport React from \"react\";\nimport UserDescription from './UserDescription/UserDescription';\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\nimport {UserDescriptionType} from \"../../redux/profile-reducer\";\nimport { Error404 } from '../../Error404';\n\ntype ProfileType = {\n    profile: UserDescriptionType\n}\nexport function Profile(props: ProfileType) {\n    if (!props.profile) {\n        return <Error404/>\n    } else {\n        return (\n            <div className={s.profile}>\n                <UserDescription profile={props.profile}/>\n                <MyPostsContainer/>\n            </div>\n        )\n    }\n}","import s from './Profile.module.scss'\nimport React from \"react\";\nimport {Profile} from './Profile';\nimport {addPost, changePost, ProfilePageType, setUserProfile, UserDescriptionType} from \"../../redux/profile-reducer\";\nimport {connect} from 'react-redux';\nimport {StateType} from \"../../redux/redux-store\";\nimport {PostType} from \"./MyPosts/Post/Post\";\nimport axios from \"axios\";\nimport {RouteComponentProps, withRouter } from 'react-router-dom';\n\ntype OwnProfileContainerType = {\n    setUserProfile: (profile: UserDescriptionType) => void\n    profile: UserDescriptionType\n}\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype ProfileContainerType = RouteComponentProps<PathParamsType> & OwnProfileContainerType\n\nclass ProfileContainer extends React.Component<ProfileContainerType, ProfilePageType> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) userId = '2'\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\n            .then(response => {\n                this.props.setUserProfile(response.data)\n            })\n    }\n\n    render() {\n        return (\n            <div className={s.profile}>\n                <Profile profile={this.props.profile}/>\n            </div>\n        )\n    }\n}\n\ntype mapStateToPropsType = {\n    posts: Array<PostType>\n    postText: string\n    profile: UserDescriptionType\n}\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => {\n    return {\n        posts: state.profilePage.posts,\n        postText: state.profilePage.postText,\n        profile: state.profilePage.profile,\n    }\n}\n\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\n\nexport default connect(mapStateToProps, {\n    addPost,\n    changePost,\n    setUserProfile,\n})(WithUrlDataContainerComponent)\n\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from './components/Profile/ProfileContainer';\n\nexport const Routes = () => {\n    return (\n        <div>\n            <Route path={'/profile/:userId?'}\n                   render={() => <ProfileContainer/>}/>\n            <Route path={'/dialogs'}\n                   render={() => <DialogsContainer/>}/>\n            <Route path={'/users'}\n                   render={() => <UsersContainer/>}/>\n        </div>\n    );\n};\n\n","import React from 'react'\nimport './App.module.scss'\nimport s from './App.module.scss'\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Header from './components/Header/Header';\nimport {Routes} from \"./Routes\";\n\nexport const App = () => {\n    return (\n        <div className={s.app}>\n            <Header/>\n            <Container fixed maxWidth=\"lg\">\n                <Grid container spacing={2}>\n                    <Grid item xs={3}>\n                        <Paper style={{padding: '15px 0'}}>\n                            <Navbar/>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Paper style={{padding: '15px 15px'}}>\n                            <Routes />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './index.scss'\nimport {store} from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport {App} from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter, HashRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__10UeP\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__15I9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"messagesItems\":\"Dialogs_messagesItems__3JX3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1nzJQ\",\"active\":\"DialogItem_active__JdILs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3CRqz\",\"user\":\"Users_user__1d1r4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2AZpm\",\"postForm\":\"MyPosts_postForm__1ywSN\"};"],"sourceRoot":""}