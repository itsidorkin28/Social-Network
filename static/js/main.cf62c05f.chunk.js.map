{"version":3,"sources":["redux/state.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/UserDescription/UserDescription.tsx","components/Profile/MyPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Profile/MyPosts/Post/Post.module.scss","components/Dialogs/Dialogs.module.scss","components/Navbar/Navbar.module.scss","components/Profile/MyPage.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Message/Message.module.scss","components/Profile/MyPosts/MyPosts.module.scss"],"names":["store","_state","profilePage","posts","id","v1","post","likesCount","messagesPage","dialogs","name","messages","message","getState","this","_callSubscriber","console","log","subscribe","observer","dispatch","action","type","newPost","postText","push","newMessage","messageText","DialogItem","props","path","className","s","dialogItem","to","activeClassName","active","Message","Dialogs","dialogsElements","map","d","messagesElements","m","useState","value","setValue","sendMessage","trim","dialogsItems","messagesItems","Box","component","sx","mb","width","noValidate","autoComplete","TextField","label","multiline","maxRows","onChange","e","currentTarget","onKeyPress","ctrlKey","key","Stack","direction","spacing","Button","variant","endIcon","onClick","Navbar","navbar","Header","flexGrow","AppBar","position","Toolbar","Typography","color","Post","postImg","postAvatar","src","postPost","postLikes","MyPosts","postsElements","addPost","myPosts","UserDescription","MyPage","myPage","userDescription","Item","styled","Paper","theme","typography","body2","padding","textAlign","palette","text","secondary","App","app","Container","maxWidth","Grid","container","item","xs","render","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","ReactDOM","bind","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cf62c05f.chunk.js","sourcesContent":["import {DialogItemType} from \"../components/Dialogs/DialogItem/DialogItem\";\nimport {v1} from \"uuid\";\nimport {MessageType} from \"../components/Dialogs/Message/Message\";\nimport {PostType} from \"../components/Profile/MyPosts/Post/Post\";\n\nexport type StateType = {\n    profilePage: {\n        posts: Array<PostType>\n    }\n    messagesPage: {\n        messages: Array<MessageType>\n        dialogs: Array<DialogItemType>\n    }\n}\n\nexport type StoreType = {\n    _state: StateType\n    _callSubscriber: () => void\n    subscribe: (observer: () => void) => void\n    getState: () => StateType\n    dispatch: (action: ActionsTypes) => void\n}\n\nexport type ActionsTypes = ReturnType<typeof AddPostAC> | ReturnType<typeof SendMessageAC>\n\nexport const AddPostAC = (postText: string) => {\n    return {\n        type: \"ADD-POST\",\n        postText: postText\n    } as const\n}\n\nexport const SendMessageAC = (messageText: string) => {\n    return {\n        type: \"SEND-MESSAGE\",\n        messageText: messageText\n    } as const\n}\n\n\nexport const store: StoreType = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: v1(), post: 'Hello!', likesCount: 3},\n                {id: v1(), post: 'JS!', likesCount: 9}\n            ]\n        },\n        messagesPage: {\n            dialogs: [\n                {id: v1(), name: 'Alexander'},\n                {id: v1(), name: 'Alena'}\n            ],\n            messages: [\n                {id: v1(), message: 'Hello!'},\n                {id: v1(), message: 'How are you?'}\n            ]\n        }\n    },\n    getState() {\n        return this._state\n    },\n    _callSubscriber() {\n        console.log('State changed')\n    },\n    subscribe(observer: () => void) {\n        this._callSubscriber = observer\n    },\n    dispatch(action: ActionsTypes) {\n        if (action.type === 'ADD-POST') {\n            const newPost: PostType = {id: v1(), post: action.postText, likesCount: 0}\n            this._state.profilePage.posts.push(newPost)\n            this._callSubscriber()\n        } else if (action.type === 'SEND-MESSAGE') {\n            const newMessage: MessageType = {id: v1(), message: action.messageText}\n            this._state.messagesPage.messages.push(newMessage)\n            this._callSubscriber()\n        }\n    }\n}\n","import s from \"./DialogItem.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nexport type DialogItemType = {\n    id: string\n    name: string\n}\nexport const DialogItem = (props: DialogItemType) => {\n    let path = `/dialogs/${props.id}`\n\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}","import s from \"./Message.module.scss\";\nimport React from \"react\";\n\nexport type MessageType = {\n    id: string\n    message: string\n}\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport s from './Dialogs.module.scss'\nimport {DialogItem, DialogItemType} from \"./DialogItem/DialogItem\";\nimport {Message, MessageType} from \"./Message/Message\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {ActionsTypes, AddPostAC, SendMessageAC} from \"../../redux/state\";\n\ntype DialogsType = {\n    messagesPage: {\n        messages: Array<MessageType>\n        dialogs: Array<DialogItemType>\n    }\n    dispatch: (action: ActionsTypes) => void\n}\n\nfunction Dialogs(props: DialogsType) {\n\n    const dialogsElements = props.messagesPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n    const messagesElements = props.messagesPage.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>)\n\n    const [value, setValue] = useState<string>('');\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value);\n    };\n\n    const sendMessage = () => {\n        if (value.trim()) {\n            props.dispatch(SendMessageAC(value.trim()))\n            setValue('')\n        }\n    }\n    const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            sendMessage()\n        }\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messagesItems}>\n                {messagesElements}\n                <div>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& .MuiTextField-root': {mb: 1, width: '100%'},\n                        }}\n                        noValidate\n                        autoComplete=\"off\">\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"What's new?\"\n                            multiline\n                            maxRows={4}\n                            value={value}\n                            onChange={handleChange}\n                            onKeyPress={handleKeyPress}/>\n\n                    </Box>\n                    <Stack direction=\"row\" spacing={1}>\n                        <Button variant=\"contained\" endIcon={<SendIcon/>} onClick={sendMessage}>\n                            Send\n                        </Button>\n                    </Stack>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs","import s from './Navbar.module.scss'\nimport React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.navbar}>\n            <div>\n               <NavLink to='/mypage' activeClassName={s.active}>\n                   My Page\n               </NavLink>\n            </div>\n            <div>\n                <NavLink to='/dialogs' activeClassName={s.active}>\n                    Messages\n                </NavLink>\n            </div>\n        </nav>\n    )\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nexport default function Header() {\n    return (\n        <Box sx={{ flexGrow: 1, mb: 2 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        SOCIAL NETWORK\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}","import s from './Post.module.scss'\n\nexport type PostType = {\n    id: string\n    post: string\n    likesCount: number\n}\n\nfunction Post(props: PostType) {\n    return (\n        <div className={s.post}>\n                <div className={s.postImg}>\n                    <img className={s.postAvatar} src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\"/>\n                </div>\n                <div className={s.postPost}>\n                    <span>{props.post}</span>\n                </div>\n                <div className={s.postLikes}>\n                    <span>Likes: {props.likesCount}</span>\n                </div>\n        </div>\n    )\n}\n\nexport default Post","import Post, {PostType} from \"./Post/Post\";\nimport s from './MyPosts.module.scss'\nimport {useState, KeyboardEvent, createRef, ChangeEvent} from \"react\";\nimport {ActionsTypes, AddPostAC} from \"../../../redux/state\";\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\ntype MyPostType = {\n    posts: Array<PostType>\n    dispatch: (action: ActionsTypes) => void\n}\n\nfunction MyPosts(props: MyPostType) {\n    const postsElements = props.posts.map(m => <Post key={m.id} id={m.id} post={m.post} likesCount={m.likesCount}/>)\n    const [value, setValue] = useState<string>('');\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value);\n    };\n\n    const addPost = () => {\n        if (value.trim()) {\n            props.dispatch(AddPostAC(value.trim()))\n            setValue('')\n        }\n    }\n    const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey && e.key === 'Enter') {\n            addPost()\n        }\n    }\n    return (\n        <div className={s.myPosts}>\n            <div>\n                <h3>My posts</h3>\n            </div>\n            <div>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': {mb: 1, width: '100%'},\n                    }}\n                    noValidate\n                    autoComplete=\"off\">\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"What's new?\"\n                        multiline\n                        maxRows={4}\n                        value={value}\n                        onChange={handleChange}\n                        onKeyPress={handleKeyPress}/>\n\n                </Box>\n                <Stack direction=\"row\" spacing={1}>\n                    <Button variant=\"contained\" endIcon={<SendIcon/>} onClick={addPost}>\n                        Send\n                    </Button>\n                </Stack>\n            </div>\n            <div>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts","import React from \"react\";\nimport s from './UserDescription.module.scss'\n\nfunction UserDescription() {\n    return (\n        <div className={s.UserDescription}>\n            User Description\n        </div>\n    )\n}\n\nexport default UserDescription","import s from './MyPage.module.scss'\nimport React from \"react\";\nimport MyPosts from './MyPosts/MyPosts';\nimport {PostType} from \"./MyPosts/Post/Post\";\nimport {ActionsTypes} from \"../../redux/state\";\nimport UserDescription from './UserDescription/UserDescription';\n\ntype MyPage = {\n    profilePage: {\n        posts: Array<PostType>\n    }\n    dispatch: (action: ActionsTypes) => void\n}\n\nexport function MyPage(props: MyPage) {\n    return (\n        <div className={s.myPage}>\n            <div className={s.userDescription}>\n                <UserDescription/>\n            </div>\n            <div className={s.myPosts}>\n                <MyPosts posts={props.profilePage.posts} dispatch={props.dispatch}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport './App.module.scss'\nimport s from './App.module.scss'\nimport Dialogs from './components/Dialogs/Dialogs';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Route} from \"react-router-dom\";\nimport {ActionsTypes, StateType} from \"./redux/state\";\nimport {styled} from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Header from './components/Header/Header';\nimport { MyPage } from './components/Profile/MyPage';\n\nconst Item = styled(Paper)(({theme}) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\ntype AppType = {\n    state: StateType\n    dispatch: (action: ActionsTypes) => void\n}\n\nfunction App(props: AppType) {\n    return (\n        <div className={s.app}>\n            <Header/>\n            <Container maxWidth=\"lg\">\n                <Box sx={{flexGrow: 1}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={3}>\n                            <Item>\n                                <Navbar/>\n                            </Item>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Item>\n                                <Route path='/mypage'\n                                       render={() => <MyPage profilePage={props.state.profilePage}\n                                                             dispatch={props.dispatch}/>}/>\n                                <Route path='/dialogs'\n                                       render={() => <Dialogs messagesPage={props.state.messagesPage}\n                                                              dispatch={props.dispatch}/>}/>\n                            </Item>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './index.scss'\nimport {store} from \"./redux/state\";\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {BrowserRouter} from \"react-router-dom\"\n\n\nconst rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={store.getState()} dispatch={store.dispatch.bind(store)}/>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree()\nstore.subscribe(rerenderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1jere\",\"postImg\":\"Post_postImg__8Hx5x\",\"postAvatar\":\"Post_postAvatar__SUu-U\",\"postPost\":\"Post_postPost__17SJC\",\"postLikes\":\"Post_postLikes__2EER6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogsItems\":\"Dialogs_dialogsItems__2PZ9i\",\"messagesItems\":\"Dialogs_messagesItems__3JX3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__10UeP\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPage\":\"MyPage_myPage__1nT4m\",\"userDescription\":\"MyPage_userDescription__1ilrO\",\"myPosts\":\"MyPage_myPosts__yiGBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1nzJQ\",\"active\":\"DialogItem_active__JdILs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__27Afv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2AZpm\"};"],"sourceRoot":""}