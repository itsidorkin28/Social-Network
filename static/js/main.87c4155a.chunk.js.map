{"version":3,"sources":["app/App.module.scss","features/Users/User/User.module.scss","components/FollowButton/FollowButton.module.scss","features/Profile/MyPosts/Post/Post.module.scss","features/Profile/About/About.module.scss","features/Profile/MyPosts/MyPostsForm/MyPostsForm.module.scss","features/Login/Login.module.scss","api/profile-api.ts","app/app-reducer.ts","utils/error-utils.ts","api/users-api.ts","features/Profile/profile-reducer.ts","features/Users/users-reducer.ts","api/auth-api.ts","features/Login/auth-reducer.ts","app/redux-store.ts","features/Header/Header.tsx","components/FollowButton/FollowButton.tsx","features/Users/User/User.tsx","features/Users/UsersSearchForm/UsersSearchForm.tsx","features/Users/Users.tsx","features/Navbar/Navbar.tsx","features/Profile/About/About.tsx","features/Profile/MyPosts/Post/Post.tsx","features/Profile/MyPosts/MyPostsForm/MyPostsForm.tsx","features/Profile/MyPosts/MyPosts.tsx","features/Profile/ProfileStatus/ProfileStatus.tsx","assets/images/bgnode.jpg","features/Profile/Profile.tsx","features/Main/Main.tsx","components/ErrorSnackbar/ErrorSnackbar.tsx","features/Login/LoginForm/LoginForm.tsx","features/Login/Login.tsx","app/App.tsx","reportWebVitals.ts","index.tsx","features/Profile/Profile.module.scss","features/Users/UsersSearchForm/UsersSearchForm.module.scss","features/Header/Header.module.scss","features/Profile/ProfileStatus/ProfileStatus.module.scss","features/Users/Users.module.scss","features/Navbar/Navbar.module.scss","features/Profile/MyPosts/MyPosts.module.scss","features/Main/Main.module.scss","features/Login/LoginForm/LoginForm.module.scss"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","profileAPI","paramsUserID","get","userId","status","put","initialState","appStatus","error","initialization","setAppError","type","setAppStatus","setAppInitialization","value","handleServerAppError","data","dispatch","messages","length","handleServerNetworkError","e","message","usersAPI","currentPage","pageSize","filter","term","friend","then","response","userID","post","delete","posts","id","v1","likesCount","profile","followed","isFollowing","setStatusProfile","getUserFollowedTC","a","res","usersList","totalUsersCount","isFetching","disableButton","setFilter","payload","toggleIsFollowing","toggleIsFetching","setCurrentPage","getUsersTC","page","users","items","totalCount","followUserTC","resultCode","unfollowUserTC","authAPI","email","password","rememberMe","login","fieldsErrors","isAuth","setAuthUserData","getAuthUserDataTC","rootReducer","combineReducers","profilePage","state","action","newPost","postText","usersPage","map","u","auth","app","store","createStore","applyMiddleware","thunkMiddleware","window","Header","React","useDispatch","useSelector","logoutHandler","className","s","header","container","title","sx","fontSize","color","loginInfo","logoutBtn","onClick","disabled","FollowButton","memo","followUserHandler","unfollowUserHandler","disabledButton","some","unfollowBtn","followBtn","User","mappedUsers","Grid","item","xs","user","to","Avatar","alt","name","src","photos","small","width","height","spacing","validationSchema","Yup","max","UsersSearchForm","onFilterChanged","initialValues","onSubmit","values","setSubmitting","isSubmitting","searchForm","inputBlock","placeholder","searchBtn","icon","selectBlock","select","as","Users","useEffect","changeCurrentPage","useCallback","pagesCount","Math","ceil","searchBlock","CircularProgress","style","marginTop","marginBottom","pagination","Pagination","count","onChange","Navbar","navbar","isActive","active","About","aboutMe","aboutBlock","Post","props","postHeader","avatar","MyPostsForm","addPostHandler","myPostsForm","IconButton","margin","PostAdd","component","MyPosts","postsElements","m","trim","myPosts","postForm","allPosts","ProfileStatus","useState","editMode","setEditMode","localStatus","setLocalStatus","offEditMode","updateStatusProfileTC","profileStatus","input","currentTarget","autoFocus","onFocus","event","onBlur","onKeyPress","key","span","noStatus","HeadImg","styled","div","img","Profile","authUserId","useParams","String","setStatusProfileTC","profileHeader","large","imag","headInfo","fullName","border","position","top","left","info","profileContent","about","Main","main","nav","content","path","element","Alert","ref","elevation","variant","ErrorSnackbar","isOpen","handleClose","reason","Snackbar","open","autoHideDuration","onClose","anchorOrigin","horizontal","vertical","severity","required","min","matches","LoginForm","loginHandler","loginTC","loginForm","remember","htmlFor","loginBtn","Login","App","appInitialization","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87c4155a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__10dw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"User_users__2zBa5\",\"user\":\"User_user__1zDCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followBtn\":\"FollowButton_followBtn__Jw8kA\",\"unfollowBtn\":\"FollowButton_unfollowBtn__2DUDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2prcS\",\"postHeader\":\"Post_postHeader__13KaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutBlock\":\"About_aboutBlock__2WwFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsForm\":\"MyPostsForm_myPostsForm__2-JJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__ylczG\"};","import axios from 'axios';\n\nconst instance = axios.create({\n\twithCredentials: true,\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\theaders: {\n\t\t'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n\t},\n});\n\nexport const profileAPI = {\n\tasync getProfile(paramsUserID: string | undefined) {\n\t\treturn instance.get<ProfileType>(`profile/${paramsUserID}`);\n\t},\n\tasync getStatus(userId: string | undefined) {\n\t\treturn instance.get<string>(`profile/status/${userId}`);\n\t},\n\tasync updateStatus(status: string) {\n\t\treturn instance.put<UpdateStatusType>(`profile/status`, {status});\n\t}\n\n};\n\ntype UpdateStatusType = {\n\tdata: {}\n\tmessages: Array<string>\n\tfieldsErrors: Array<string>\n\tresultCode: number\n};\n\nexport type ProfileType = {\n\taboutMe: string\n\tcontacts: {\n\t\tfacebook: string\n\t\twebsite: string\n\t\tvk: string\n\t\ttwitter: string\n\t\tinstagram: string\n\t\tyoutube: string\n\t\tgithub: string\n\t\tmainLink: string\n\t},\n\tlookingForAJob: boolean\n\tlookingForAJobDescription: string\n\tfullName: string\n\tuserId: number\n\tphotos: {\n\t\tsmall: string\n\t\tlarge: string\n\t}\n};","const initialState = {\n\tappStatus: 'idle' as RequestStatusType,\n\terror: null as AppErrorType,\n\tinitialization: false as boolean\n};\n\nexport const appReducer = (state = initialState, action: AppReducerActionsType): AppInitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'APP/SET-STATUS':\n\t\t\treturn {...state, appStatus: action.status};\n\t\tcase 'APP/SET-ERROR':\n\t\t\treturn {...state, error: action.error};\n\t\tcase 'APP/SET-INITIALIZATION':\n\t\t\treturn {...state, initialization: action.value};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// AC\n\nexport const setAppError = (error: AppErrorType) => {\n\treturn {type: 'APP/SET-ERROR', error} as const;\n};\nexport const setAppStatus = (status: RequestStatusType) => {\n\treturn {type: 'APP/SET-STATUS', status} as const;\n};\nexport const setAppInitialization = (value: boolean) => {\n\treturn {type: 'APP/SET-INITIALIZATION', value} as const;\n};\n\n// Types\n\nexport type AppReducerActionsType = ChangeAppStatusType | SetAppErrorType | ReturnType<typeof setAppInitialization>;\nexport type ChangeAppStatusType = ReturnType<typeof setAppStatus>;\nexport type SetAppErrorType = ReturnType<typeof setAppError>;\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\nexport type AppErrorType = string | null;\n\ntype AppInitialStateType = typeof initialState;\n\n","import { Dispatch } from '@reduxjs/toolkit';\nimport {ChangeAppStatusType, setAppError, SetAppErrorType, setAppStatus} from '../app/app-reducer';\nimport {ResponseType} from '../api/auth-api';\n\nexport const handleServerAppError = <T>(data: ResponseType<T>, dispatch: ErrorUtilsDispatchType) => {\n\tif (data.messages.length) {\n\t\tdispatch(setAppError(data.messages[0]));\n\t} else {\n\t\tdispatch(setAppError('Some error occurred'));\n\t}\n\tdispatch(setAppStatus('failed'));\n};\n\nexport const handleServerNetworkError = (e: {message: string}, dispatch: ErrorUtilsDispatchType) => {\n\tdispatch(setAppError(e.message));\n\tdispatch(setAppStatus('failed'));\n};\n\ntype ErrorUtilsDispatchType = Dispatch<ChangeAppStatusType | SetAppErrorType>;","import axios from 'axios';\nimport {FilterType} from '../features/Users/users-reducer';\n\nconst instance = axios.create({\n\twithCredentials: true,\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\theaders: {\n\t\t'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n\t},\n});\n\nexport const usersAPI = {\n\tasync getUsers(currentPage: number = 1, pageSize: number = 10, filter: FilterType = {term: '', friend: null}) {\n\t\treturn instance.get<GetUserType>(`users?page=${currentPage}&count=${pageSize}&term=${filter.term}`\n\t\t\t+ (filter.friend === null ? '' : `&friend=${filter.friend}`))\n\t\t\t.then(response => {\n\t\t\t\treturn response.data;\n\t\t\t});\n\t},\n\tasync followUser(userID: number | string) {\n\t\treturn instance.post<PostAndDeleteFollowType>(`follow/${userID}`);\n\t},\n\tasync unfollowUser(userID: number | string) {\n\t\treturn instance.delete<PostAndDeleteFollowType>(`follow/${userID}`);\n\t},\n\tasync getFollowed(userID: number | string | undefined) {\n\t\treturn instance.get<boolean>(`follow/${userID}`);\n\t}\n};\n\ntype PostAndDeleteFollowType = {\n\tdata: {},\n\tmessages: Array<string>\n\tfieldsErrors: Array<string>\n\tresultCode: number\n};\n\nexport type UserType = {\n\tname: string\n\tid: number\n\tuniqueUrlName: string\n\tphotos: {\n\t\tsmall: string\n\t\tlarge: string\n\t}\n\tstatus: string\n\tfollowed: boolean\n};\n\ntype GetUserType = {\n\titems: Array<UserType>\n\ttotalCount: number\n\terror: string\n};\n\n\n","import {v1} from 'uuid';\nimport {profileAPI, ProfileType} from '../../api/profile-api';\nimport {ThunkType} from '../../app/redux-store';\nimport {RequestStatusType, setAppStatus} from '../../app/app-reducer';\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils';\nimport {usersAPI} from '../../api/users-api';\n\nconst initialState: ProfileDomainType = {\n\tposts: [\n\t\t{id: v1(), post: 'Hello!', likesCount: 3},\n\t\t{id: v1(), post: 'JS!', likesCount: 9},\n\t],\n\tprofile: null,\n\tstatus: '',\n\tfollowed: false,\n\tisFollowing: 'idle',\n};\n\nexport const profileReducer = (state = initialState, action: ProfileActionsType): ProfileDomainType => {\n\tswitch (action.type) {\n\t\tcase 'PROFILE/ADD-POST':\n\t\t\tconst newPost: PostType = {id: action.id, post: action.postText, likesCount: 0};\n\t\t\treturn {...state, posts: [newPost, ...state.posts]};\n\t\tcase 'PROFILE/SET-USER-PROFILE':\n\t\t\treturn {...state, profile: action.profile};\n\t\tcase 'PROFILE/SET-STATUS-PROFILE':\n\t\t\treturn {...state, status: action.status};\n\t\tcase 'PROFILE/SET-FOLLOWED-USER':\n\t\t\treturn {...state, followed: action.followed};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// AC\n\nexport const setStatusProfile = (status: string) => {\n\treturn {type: 'PROFILE/SET-STATUS-PROFILE', status} as const;\n};\nexport const setUserProfile = (profile: ProfileType) => {\n\treturn {type: 'PROFILE/SET-USER-PROFILE', profile} as const;\n};\nexport const addPost = (postText: string) => {\n\treturn {type: 'PROFILE/ADD-POST', postText, id: v1()} as const;\n};\nexport const setFollowedUser = (followed: boolean) => {\n\treturn {type: 'PROFILE/SET-FOLLOWED-USER', followed} as const;\n};\n\n// Thunk\n\nexport const setUserProfileTC = (paramsUserID: string | undefined): ThunkType => async dispatch => {\n\tdispatch(setAppStatus('loading'));\n\ttry {\n\t\tconst res = await profileAPI.getProfile(paramsUserID);\n\t\tdispatch(setUserProfile(res.data));\n\t\tdispatch(setAppStatus('succeeded'));\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n};\nexport const setStatusProfileTC = (paramsUserID: string | undefined): ThunkType => async dispatch => {\n\tdispatch(setAppStatus('loading'));\n\ttry {\n\t\tconst res = await profileAPI.getStatus(paramsUserID);\n\t\tdispatch(setStatusProfile(res.data));\n\t\tdispatch(setAppStatus('succeeded'));\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n\n};\nexport const updateStatusProfileTC = (status: string): ThunkType => async dispatch => {\n\tdispatch(setAppStatus('loading'));\n\ttry {\n\t\tconst res = await profileAPI.updateStatus(status);\n\t\tif (res.data.resultCode === 0) {\n\t\t\tdispatch(setStatusProfile(status));\n\t\t\tdispatch(setAppStatus('succeeded'));\n\t\t} else {\n\t\t\thandleServerAppError(res.data, dispatch);\n\t\t}\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n};\n\nexport const getUserFollowedTC = (userId: number | string | undefined): ThunkType => async dispatch => {\n\ttry {\n\t\tconst res = await usersAPI.getFollowed(userId);\n\t\tdispatch(setFollowedUser(res.data));\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n};\n\n// Types\n\nexport type PostType = { id: string, post: string, likesCount: number };\n\nexport type ProfileDomainType = {\n\tprofile: ProfileType | null\n\tposts: Array<PostType>\n\tstatus: string\n\tfollowed: boolean\n\tisFollowing: RequestStatusType\n};\n\nexport type ProfileActionsType =\n\tReturnType<typeof addPost>\n\t| ReturnType<typeof setUserProfile>\n\t| ReturnType<typeof setStatusProfile>\n\t| ReturnType<typeof setFollowedUser>;","import {usersAPI, UserType} from '../../api/users-api';\nimport {ThunkType} from '../../app/redux-store';\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils';\nimport {getUserFollowedTC} from '../Profile/profile-reducer';\nimport {RequestStatusType} from '../../app/app-reducer';\n\nconst initialState: UsersDomainType = {\n\tusersList: [],\n\tpageSize: 10,\n\ttotalUsersCount: 0,\n\tcurrentPage: 1,\n\tisFetching: 'idle',\n\tisFollowing: [],\n\tdisableButton: 'idle',\n\tfilter: {\n\t\tterm: '',\n\t\tfriend: null\n\t}\n};\n\nexport const usersReducer = (state = initialState, action: UsersActionsType): UsersDomainType => {\n\tswitch (action.type) {\n\t\tcase 'USERS/FOLLOW':\n\t\t\treturn {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: true} : u)};\n\t\tcase 'USERS/UNFOLLOW':\n\t\t\treturn {...state, usersList: state.usersList.map(u => u.id === action.id ? {...u, followed: false} : u)};\n\t\tcase 'USERS/SET-USERS':\n\t\t\treturn {...state, usersList: action.users};\n\t\tcase 'USERS/SET-CURRENT-PAGE':\n\t\t\treturn {...state, currentPage: action.currentPage};\n\t\tcase 'USERS/SET-TOTAL-USERS-COUNT':\n\t\t\treturn {...state, totalUsersCount: action.totalUsersCount};\n\t\tcase 'TOGGLE_IS_FETCHING':\n\t\t\treturn {...state, isFetching: action.isFetching};\n\t\tcase 'USERS/TOGGLE-IS-FOLLOWING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFollowing: action.disableButton === 'loading'\n\t\t\t\t\t? [...state.isFollowing, action.userID]\n\t\t\t\t\t: [...state.isFollowing.filter(id => id !== action.userID)]\n\t\t\t};\n\t\tcase 'USERS/SET-FILTER':\n\t\t\treturn {...state, filter: action.payload};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// AC\n\nexport const setFilter = (filter: FilterType) => ({type: 'USERS/SET-FILTER', payload: filter} as const);\nexport const toggleIsFollowing = (disableButton: RequestStatusType, userID: number | string) => ({\n\ttype: 'USERS/TOGGLE-IS-FOLLOWING',\n\tdisableButton,\n\tuserID\n} as const);\nexport const toggleIsFetching = (isFetching: RequestStatusType) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const);\nexport const follow = (id: number | string) => ({type: 'USERS/FOLLOW', id} as const);\nexport const unfollow = (id: number | string) => ({type: 'USERS/UNFOLLOW', id} as const);\nexport const setUsers = (users: Array<UserType>) => ({type: 'USERS/SET-USERS', users} as const);\nexport const setCurrentPage = (currentPage: number) => ({type: 'USERS/SET-CURRENT-PAGE', currentPage} as const);\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\n\ttype: 'USERS/SET-TOTAL-USERS-COUNT',\n\ttotalUsersCount\n} as const);\n\n// Thunk\n\nexport const getUsersTC = (page: number, pageSize: number, filter: FilterType): ThunkType => async dispatch => {\n\tdispatch(toggleIsFetching('loading'));\n\tdispatch(setFilter(filter));\n\tdispatch(setCurrentPage(1));\n\ttry {\n\t\tconst res = await usersAPI.getUsers(page, pageSize, filter);\n\t\tdispatch(setUsers(res.items));\n\t\tdispatch(setTotalUsersCount(res.totalCount));\n\t\tdispatch(toggleIsFetching('succeeded'));\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n\n};\nexport const followUserTC = (userID: number | string): ThunkType => async dispatch => {\n\tdispatch(toggleIsFollowing('loading', userID));\n\ttry {\n\t\tconst res = await usersAPI.followUser(userID);\n\t\tif (res.data.resultCode === 0) {\n\t\t\tdispatch(follow(userID));\n\t\t\ttry {\n\t\t\t\tawait dispatch(getUserFollowedTC(userID));\n\t\t\t} catch (e) {\n\t\t\t\thandleServerAppError(res.data, dispatch);\n\t\t\t}\n\t\t\tdispatch(toggleIsFollowing('succeeded', userID));\n\t\t} else {\n\t\t\thandleServerAppError(res.data, dispatch);\n\t\t}\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t\tdispatch(toggleIsFollowing('failed', userID));\n\n\t}\n};\nexport const unfollowUserTC = (userID: number | string): ThunkType => async dispatch => {\n\tdispatch(toggleIsFollowing('loading', userID));\n\ttry {\n\t\tconst res = await usersAPI.unfollowUser(userID);\n\t\tif (res.data.resultCode === 0) {\n\t\t\tdispatch(unfollow(userID));\n\t\t\ttry {\n\t\t\t\tawait dispatch(getUserFollowedTC(userID));\n\t\t\t} catch (e) {\n\t\t\t\thandleServerAppError(res.data, dispatch);\n\t\t\t}\n\t\t\tdispatch(toggleIsFollowing('succeeded', userID));\n\t\t} else {\n\t\t\thandleServerAppError(res.data, dispatch);\n\t\t}\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t\tdispatch(toggleIsFollowing('failed', userID));\n\n\t}\n};\n\n// Types\n\nexport type UsersDomainType = {\n\tusersList: Array<UserType>\n\tpageSize: number\n\ttotalUsersCount: number\n\tcurrentPage: number\n\tisFetching: RequestStatusType\n\tisFollowing: Array<number | string>\n\tdisableButton: RequestStatusType\n\tfilter: {\n\t\tterm: string\n\t\tfriend: null | boolean\n\t}\n};\n\nexport type FilterType = typeof initialState.filter;\n\nexport type UsersActionsType =\n\tReturnType<typeof follow>\n\t| ReturnType<typeof unfollow>\n\t| ReturnType<typeof setUsers>\n\t| ReturnType<typeof setCurrentPage>\n\t| ReturnType<typeof setTotalUsersCount>\n\t| ReturnType<typeof toggleIsFetching>\n\t| ReturnType<typeof toggleIsFollowing>\n\t| ReturnType<typeof setFilter>;\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n\twithCredentials: true,\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\theaders: {\n\t\t'API-KEY': '1e90b645-3ab8-4f0b-b1bb-01b70c47396d'\n\t},\n});\n\nexport const authAPI = {\n\tasync authMe() {\n\t\treturn instance.get<ResponseType<AuthMeData>>('auth/me');\n\t},\n\tasync login(email: string, password: string, rememberMe: boolean = false) {\n\t\treturn instance.post<ResponseType<LoginData>>('auth/login', {email, password, rememberMe});\n\t},\n\tasync logout() {\n\t\treturn instance.delete<ResponseType<{}>>('auth/login');\n\t}\n};\n\nexport type ResponseType<T> = {\n\tdata: T\n\tmessages: Array<string>\n\tfieldsErrors: Array<string>\n\tresultCode: number\n};\n\ntype LoginData = {\n\tuserId: number\n};\nexport type AuthMeData = {\n\tid: number | null\n\tlogin: string | null\n\temail: string | null\n};","import {authAPI, AuthMeData, ResponseType} from '../../api/auth-api';\nimport {ThunkType} from '../../app/redux-store';\nimport {setAppInitialization, setAppStatus} from '../../app/app-reducer';\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils';\n\nconst initialState: AuthDomainType = {\n\tdata: {\n\t\tid: null,\n\t\tlogin: null,\n\t\temail: null,\n\t},\n\tmessages: [],\n\tfieldsErrors: [],\n\tresultCode: 0,\n\tisAuth: false,\n};\n\n\nexport const authReducer = (state = initialState, action: AuthActionsType): AuthDomainType => {\n\tswitch (action.type) {\n\t\tcase 'AUTH/SET-AUTH-USER-DATA':\n\t\t\treturn {...state, data: {...state.data, ...action.payload}, isAuth: action.isAuth};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// AC\n\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean) => {\n\treturn {\n\t\ttype: 'AUTH/SET-AUTH-USER-DATA',\n\t\tpayload: {id, login, email},\n\t\tisAuth\n\t} as const;\n};\n\n// Thunk\n\nexport const getAuthUserDataTC = (): ThunkType => async dispatch => {\n\tdispatch(setAppStatus('loading'));\n\ttry {\n\t\tconst res = await authAPI.authMe();\n\t\tif (res.data.resultCode === 0) {\n\t\t\tconst {id, login, email} = res.data.data;\n\t\t\tdispatch(setAuthUserData(id, login, email, true));\n\t\t\tdispatch(setAppInitialization(true));\n\t\t\tdispatch(setAppStatus('succeeded'));\n\t\t} else {\n\t\t\thandleServerAppError(res.data, dispatch);\n\t\t}\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n\n};\n\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkType => async dispatch => {\n\tdispatch(setAppStatus('loading'));\n\ttry {\n\t\tconst res = await authAPI.login(email, password, rememberMe);\n\t\tif (res.data.resultCode === 0) {\n\t\t\tdispatch(getAuthUserDataTC());\n\t\t\tdispatch(setAppStatus('succeeded'));\n\t\t} else {\n\t\t\thandleServerAppError(res.data, dispatch);\n\t\t}\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n\n};\n\nexport const logoutTC = (): ThunkType => async dispatch => {\n\tdispatch(setAppStatus('loading'));\n\ttry {\n\t\tconst res = await authAPI.logout();\n\t\tif (res.data.resultCode === 0) {\n\t\t\tdispatch(setAuthUserData(null, null, null, false));\n\t\t\tdispatch(setAppInitialization(false));\n\t\t\tdispatch(setAppStatus('succeeded'));\n\t\t} else {\n\t\t\thandleServerAppError(res.data, dispatch);\n\t\t}\n\t} catch (e) {\n\t\thandleServerNetworkError((e as Error), dispatch);\n\t}\n};\n\n// Types\n\nexport type AuthDomainType = ResponseType<AuthMeData> & {\n\tisAuth: boolean\n};\n\nexport type AuthActionsType = ReturnType<typeof setAuthUserData>;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport {ProfileActionsType, profileReducer} from '../features/Profile/profile-reducer';\nimport {UsersActionsType, usersReducer} from '../features/Users/users-reducer';\nimport {AuthActionsType, authReducer} from '../features/Login/auth-reducer';\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\nimport {appReducer, AppReducerActionsType} from './app-reducer';\n\nconst rootReducer = combineReducers({\n\tprofilePage: profileReducer,\n\tusersPage: usersReducer,\n\tauth: authReducer,\n\tapp: appReducer,\n});\n\nexport type AppStateType = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type AppActionsType = UsersActionsType | ProfileActionsType | AuthActionsType | AppReducerActionsType;\n\nexport type ThunkType = ThunkAction<void, AppStateType, unknown, AppActionsType>;\n\n\n//@ts-ignore\nwindow.store = store;\n\n\n","import * as React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {logoutTC} from '../Login/auth-reducer';\nimport {AppStateType} from '../../app/redux-store';\nimport s from './Header.module.scss';\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport {RequestStatusType} from '../../app/app-reducer';\n\nexport const Header = React.memo(() => {\n\tconst dispatch = useDispatch();\n\tconst appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus);\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\n\tconst login = useSelector<AppStateType, string | null>(state => state.auth.data.login);\n\tconst logoutHandler = () => {\n\t\tdispatch(logoutTC());\n\t};\n\treturn (\n\t\t<header className={s.header}>\n\t\t\t<div className={s.container}>\n\t\t\t\t<div className={s.title}>\n\t\t\t\t\t<BoltIcon sx={{fontSize: '45px', color: '#64d580'}}/>\n\t\t\t\t\t<h1>Lumos.</h1>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{isAuth\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<div className={s.loginInfo}>\n\t\t\t\t\t\t\t<span>{login}</span>\n\t\t\t\t\t\t\t<button className={s.logoutBtn} onClick={() => logoutHandler()}\n\t\t\t\t\t\t\t\t\tdisabled={appStatus === 'loading'}>\n\t\t\t\t\t\t\t\t<LogoutIcon sx={{fontSize: '35px', color: '#2254f5'}}/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: <></>}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</header>\n\t);\n});","import React from 'react';\nimport s from './FollowButton.module.scss';\nimport {useSelector} from 'react-redux';\nimport {AppStateType} from '../../app/redux-store';\n\ntype PropsType = {\n\tfollowed: boolean\n\tuserId: number | string\n\tfollowUserHandler: (userID: number | string) => void\n\tunfollowUserHandler: (userID: number | string) => void\n};\n\nexport const FollowButton = React.memo(({\n\t\t\t\t\t\t\t\t\t\t\tfollowUserHandler,\n\t\t\t\t\t\t\t\t\t\t\tunfollowUserHandler,\n\t\t\t\t\t\t\t\t\t\t\tfollowed,\n\t\t\t\t\t\t\t\t\t\t\tuserId,\n\t\t\t\t\t\t\t\t\t\t}: PropsType) => {\n\n\tconst usersPageIsFollowing = useSelector<AppStateType, Array<number | string>>(state => state.usersPage.isFollowing);\n\tconst disabledButton = usersPageIsFollowing.some(id => id === userId);\n\treturn (\n\t\t<div>\n\t\t\t{followed\n\t\t\t\t? <button className={s.unfollowBtn} onClick={() => unfollowUserHandler(userId)}\n\t\t\t\t\t\t  disabled={disabledButton}>UNFOLLOW\n\t\t\t\t</button>\n\t\t\t\t: <button className={s.followBtn} onClick={() => followUserHandler(userId)}\n\t\t\t\t\t\t  disabled={disabledButton}>FOLLOW\n\t\t\t\t</button>}\n\t\t</div>\n\t);\n});\n\n\n","import React from 'react';\nimport s from './User.module.scss';\nimport {NavLink} from 'react-router-dom';\nimport {UserType} from '../../../api/users-api';\nimport Avatar from '@mui/material/Avatar';\nimport Grid from '@mui/material/Grid';\nimport {FollowButton} from '../../../components/FollowButton/FollowButton';\n\ntype UsersType = {\n\tusersList: Array<UserType>\n\tfollowUserHandler: (userID: number | string) => void\n\tunfollowUserHandler: (userID: number | string) => void\n};\n\nexport const User = React.memo(({usersList, followUserHandler, unfollowUserHandler}: UsersType) => {\n\tconst mappedUsers = usersList.map(u => {\n\t\treturn (\n\t\t\t<Grid key={u.id} item xs>\n\n\t\t\t\t<div className={s.user}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<NavLink to={'/profile/' + u.id}>\n\t\t\t\t\t\t\t<Avatar alt={u.name} src={u.photos?.small} sx={{width: 65, height: 65}}/>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h4>{u.name}</h4>\n\t\t\t\t\t<p>ID: {u.id}</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<FollowButton followed={u.followed}\n\t\t\t\t\t\t\t\t\t  userId={u.id}\n\t\t\t\t\t\t\t\t\t  followUserHandler={followUserHandler}\n\t\t\t\t\t\t\t\t\t  unfollowUserHandler={unfollowUserHandler}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Grid>\n\n\t\t);\n\t});\n\n\treturn <div className={s.users}>\n\t\t<Grid spacing={2} container>\n\t\t\t{mappedUsers}\n\t\t</Grid>\n\t</div>;\n});\n\n","import {Field, Form, Formik} from 'formik';\nimport React from 'react';\nimport {FilterType} from '../users-reducer';\nimport * as Yup from 'yup';\nimport s from './UsersSearchForm.module.scss';\nimport FilterAltOutlinedIcon from '@mui/icons-material/FilterAltOutlined';\n\ntype UsersSearchFormType = {\n\tonFilterChanged: (filter: FilterType) => void\n\n};\ntype FormType = {\n\tterm: string\n\tfriend: 'null' | 'true' | 'false'\n};\nconst validationSchema = Yup.object({\n\tterm: Yup.string()\n\t\t.max(300, 'Must be 300 characters or less')\n});\n\nexport const UsersSearchForm = React.memo(({onFilterChanged}: UsersSearchFormType) => {\n\tconst submit = (values: FormType, {setSubmitting}: { setSubmitting: (setSubmitting: boolean) => void }) => {\n\t\tconst filter: FilterType = {\n\t\t\tterm: values.term,\n\t\t\tfriend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\n\t\t};\n\t\tonFilterChanged(filter);\n\t\tsetSubmitting(false);\n\t};\n\treturn <div>\n\t\t<Formik\n\t\t\tinitialValues={{term: '', friend: 'null'}}\n\t\t\tonSubmit={submit}\n\t\t\tvalidationSchema={validationSchema}\n\t\t>\n\t\t\t{\n\t\t\t\t({isSubmitting}) => (\n\t\t\t\t\t<Form className={s.searchForm}>\n\t\t\t\t\t\t<div className={s.inputBlock}>\n\t\t\t\t\t\t\t<Field name='term' type='text' placeholder={'Search here'}/>\n\t\t\t\t\t\t\t<button className={s.searchBtn} type='submit' disabled={isSubmitting}>\n\t\t\t\t\t\t\t\t<div className={s.icon}><FilterAltOutlinedIcon\n\t\t\t\t\t\t\t\t\tsx={{fontSize: '25px', color: '#adb5bd'}}/></div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.selectBlock}>\n\t\t\t\t\t\t\t<Field className={s.select} name='friend' as='select'>\n\t\t\t\t\t\t\t\t<option value='null'>All</option>\n\t\t\t\t\t\t\t\t<option value='true'>Only followed</option>\n\t\t\t\t\t\t\t\t<option value='false'>Only unfollowed</option>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</Form>)\n\t\t\t}\n\t\t</Formik>\n\t</div>;\n});","import {useDispatch, useSelector} from 'react-redux';\nimport {AppStateType} from '../../app/redux-store';\nimport {FilterType, followUserTC, getUsersTC, setCurrentPage, unfollowUserTC, UsersDomainType} from './users-reducer';\nimport React, {useCallback, useEffect} from 'react';\nimport {User} from './User/User';\nimport {CircularProgress, Pagination} from '@mui/material';\nimport {UsersSearchForm} from './UsersSearchForm/UsersSearchForm';\nimport s from './Users.module.scss';\n\nexport const Users = React.memo(() => {\n\t\tconst dispatch = useDispatch();\n\t\tconst usersPage = useSelector<AppStateType, UsersDomainType>(state => state.usersPage);\n\n\t\tconst onFilterChanged = (filter: FilterType) => {\n\t\t\tdispatch(getUsersTC(1, usersPage.pageSize, filter));\n\t\t};\n\n\t\tuseEffect(() => {\n\t\t\tdispatch(getUsersTC(usersPage.currentPage, usersPage.pageSize, usersPage.filter));\n\t\t\treturn function () {\n\t\t\t\tsetCurrentPage(1);\n\t\t\t};\n\t\t}, [dispatch, usersPage.currentPage, usersPage.pageSize, usersPage.filter]);\n\n\t\tconst changeCurrentPage = useCallback((currentPage: number) => {\n\t\t\tdispatch(getUsersTC(currentPage, usersPage.pageSize, usersPage.filter));\n\t\t}, [dispatch, usersPage.pageSize, usersPage.filter]);\n\n\t\tconst followUserHandler = useCallback((userID: number | string) => {\n\t\t\tdispatch(followUserTC(userID));\n\t\t}, [dispatch]);\n\n\t\tconst unfollowUserHandler = useCallback((userID: number | string) => {\n\t\t\tdispatch(unfollowUserTC(userID));\n\t\t}, [dispatch]);\n\n\t\tconst pagesCount = Math.ceil(usersPage.totalUsersCount / usersPage.pageSize);\n\n\t\treturn (\n\t\t\t<div className={s.users}>\n\t\t\t\t<div className={s.searchBlock}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Users</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<UsersSearchForm onFilterChanged={onFilterChanged}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{usersPage.isFetching === 'loading' ?\n\t\t\t\t\t<CircularProgress style={{marginTop: '30px', marginBottom: '20px'}}/> :\n\t\t\t\t\t<User usersList={usersPage.usersList}\n\t\t\t\t\t\t  followUserHandler={followUserHandler}\n\t\t\t\t\t\t  unfollowUserHandler={unfollowUserHandler}/>}\n\t\t\t\t<div className={s.pagination}>\n\t\t\t\t\t<Pagination count={pagesCount}\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<unknown>, value: number) => changeCurrentPage(value)}/>\n\t\t\t\t</div>\n\t\t\t</div>);\n\n\t})\n\n\n;","import s from './Navbar.module.scss';\nimport {NavLink} from 'react-router-dom';\n\nexport function Navbar() {\n\treturn (\n\t\t<nav className={s.navbar}>\n\t\t\t<NavLink to='/profile' className={({isActive}) => isActive ? s.active : ''}>\n\t\t\t\tProfile\n\t\t\t</NavLink>\n\t\t\t<NavLink to='/users' className={({isActive}) => isActive ? s.active : ''}>\n\t\t\t\tUsers\n\t\t\t</NavLink>\n\t\t</nav>\n\t);\n}","import {memo} from 'react';\nimport s from './About.module.scss';\n\n\ntype AboutPropsType = {\n\taboutMe: string | undefined\n};\n\nexport const About = memo(({aboutMe}: AboutPropsType) => {\n\treturn (\n\t\t<div className={s.aboutBlock}>\n\t\t\t<h4>About</h4>\n\t\t\t{aboutMe ? <p>{aboutMe}</p> : <p>The user did not tell about himself.</p>}\n\n\t\t</div>\n\t);\n});\n\n","import {Avatar} from '@mui/material';\nimport s from './Post.module.scss';\n\nexport type PostPropsType = {\n\tid: string\n\tpost: string\n\tlikesCount: number\n\tavatar: string | undefined\n\tname: string | undefined\n};\n\nfunction Post(props: PostPropsType) {\n\treturn (\n\t\t<div className={s.post}>\n\t\t\t<div className={s.postHeader}>\n\t\t\t\t<Avatar src={props.avatar} sx={{width: 45, height: 45}}/>\n\t\t\t\t<h4>{props.name}</h4>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>{props.post}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span>{props.likesCount} Like</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Post;","import {ErrorMessage, Field, Form, Formik} from 'formik';\nimport React from 'react';\nimport {PostAdd} from '@mui/icons-material';\nimport {IconButton} from '@mui/material';\nimport * as Yup from 'yup';\nimport s from './MyPostsForm.module.scss';\n\ntype MyPostsFormType = {\n\taddPostHandler: (value: string) => void\n};\n\ntype FormType = {\n\tpostText: string\n};\n\nconst validationSchema = Yup.object({\n\tpostText: Yup.string()\n\t\t.max(300, 'Must be 300 characters or less')\n});\n\nexport const MyPostsForm = React.memo(({addPostHandler}: MyPostsFormType) => {\n\tconst submit = (values: FormType, {setSubmitting}: { setSubmitting: (setSubmitting: boolean) => void }) => {\n\t\taddPostHandler(values.postText);\n\t\tsetSubmitting(false);\n\t};\n\treturn <div style={{width: '100%'}}>\n\t\t<Formik\n\t\t\tinitialValues={{postText: ''}}\n\t\t\tonSubmit={submit}\n\t\t\tvalidationSchema={validationSchema}\n\t\t>\n\t\t\t{\n\t\t\t\t({isSubmitting}) => (\n\t\t\t\t\t<Form className={s.myPostsForm}>\n\t\t\t\t\t\t<IconButton type='submit' disabled={isSubmitting} style={{margin: '0 0 5px 0'}}>\n\t\t\t\t\t\t\t<PostAdd color='primary'/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<span>Create post</span>\n\t\t\t\t\t\t<Field component={'textarea'} name='postText' type='text'\n\t\t\t\t\t\t\t   placeholder={'What\\'s on your mind?'}/>\n\t\t\t\t\t\t<ErrorMessage name='postText'/>\n\n\t\t\t\t\t</Form>)\n\t\t\t}\n\t\t</Formik>\n\t</div>;\n});","import Post from './Post/Post';\nimport s from './MyPosts.module.scss';\nimport {useCallback} from 'react';\nimport React from 'react';\nimport {addPost, PostType} from '../profile-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {MyPostsForm} from './MyPostsForm/MyPostsForm';\nimport {AppStateType} from '../../../app/redux-store';\n\ntype MyPostsPropsType = {\n\tavatar: string | undefined\n\tname: string | undefined\n};\nexport const MyPosts = React.memo(({avatar, name}: MyPostsPropsType) => {\n\tconst dispatch = useDispatch();\n\tconst posts = useSelector<AppStateType, Array<PostType>>(state => state.profilePage.posts);\n\tconst postsElements = posts.map(m => <Post key={m.id} id={m.id} post={m.post} avatar={avatar} name={name}\n\t\t\t\t\t\t\t\t\t\t\t   likesCount={m.likesCount}/>);\n\n\tconst addPostHandler = useCallback((value: string) => {\n\t\tconst newPost = value.trim();\n\t\tif (newPost) {\n\t\t\tdispatch(addPost(newPost));\n\t\t}\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className={s.myPosts}>\n\t\t\t<div className={s.postForm}>\n\t\t\t\t<MyPostsForm addPostHandler={addPostHandler}/>\n\t\t\t</div>\n\t\t\t<div className={s.allPosts}>\n\t\t\t\t{postsElements}\n\t\t\t</div>\n\n\t\t</div>\n\t);\n});","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport s from './ProfileStatus.module.scss';\nimport {updateStatusProfileTC} from '../profile-reducer';\nimport {AppStateType} from '../../../app/redux-store';\nimport {RequestStatusType} from '../../../app/app-reducer';\n\ntype ProfileStatusType = {\n\tstatus: string\n};\n\nexport const ProfileStatus = React.memo(({status}: ProfileStatusType) => {\n\tconst [editMode, setEditMode] = useState<boolean>(false);\n\tconst [localStatus, setLocalStatus] = useState<string>(status);\n\tconst dispatch = useDispatch();\n\tconst appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus);\n\n\tconst onEditMode = () => {\n\t\tif (appStatus === 'loading') {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetEditMode(true);\n\t\t}\n\t};\n\tconst offEditMode = () => {\n\t\tsetEditMode(false);\n\t\tdispatch(updateStatusProfileTC(localStatus.trim()));\n\n\t};\n\n\tuseEffect(() => {\n\t\tsetLocalStatus(status);\n\t}, [status]);\n\n\tconst handleFocus = (event: React.FocusEvent<HTMLInputElement>) => event.currentTarget.select();\n\n\tconst updateStatus = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetLocalStatus(e.currentTarget.value);\n\t};\n\n\tconst keyHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key === 'Enter') {\n\t\t\toffEditMode();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={s.profileStatus}>\n\t\t\t{editMode && <div className={s.input}>\n\t\t\t\t<input type={'text'} onChange={updateStatus} autoFocus onFocus={handleFocus}\n\t\t\t\t\t\tonBlur={offEditMode}\n\t\t\t\t\t\tvalue={localStatus} onKeyPress={keyHandler} disabled={appStatus === 'loading'}/>\n\t\t\t</div>}\n\t\t\t{!editMode && <div className={s.span} onClick={onEditMode}>\n\t\t\t\t{status ? status : <span className={s.noStatus}>type status</span>}\n\t\t\t</div>}\n\t\t</div>\n\t);\n});\n\n\n","export default __webpack_public_path__ + \"static/media/bgnode.225cbf7a.jpg\";","import s from './Profile.module.scss';\nimport React, {useCallback, useEffect} from 'react';\nimport {About} from './About/About';\nimport {ProfileType} from '../../api/profile-api';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppStateType} from '../../app/redux-store';\nimport {Params, useParams} from 'react-router-dom';\nimport {getUserFollowedTC, setStatusProfileTC, setUserProfileTC} from './profile-reducer';\nimport {MyPosts} from './MyPosts/MyPosts';\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus';\nimport {Avatar} from '@mui/material';\nimport styled from 'styled-components';\nimport imag from '../../assets/images/bgnode.jpg';\nimport {FollowButton} from '../../components/FollowButton/FollowButton';\nimport {followUserTC, unfollowUserTC} from '../Users/users-reducer';\n\nconst HeadImg = styled.div<{ img: string }>`\n    border-radius: 15px;\n    height: 70%;\n    width: 100%;\n    background-image: url(${props => props.img});\n    background-position: center;\n    background-size: cover;\n    overflow: hidden;\n`;\n\nexport const Profile = React.memo(() => {\n\tconst dispatch = useDispatch();\n\tconst profile = useSelector<AppStateType, ProfileType | null>(state => state.profilePage.profile);\n\tconst followed = useSelector<AppStateType, boolean>(state => state.profilePage.followed);\n\tconst status = useSelector<AppStateType, string>(state => state.profilePage.status);\n\tconst authUserId = useSelector<AppStateType, number | null>(state => state.auth.data.id);\n\tlet {userId}: Readonly<Params<string>> = useParams();\n\n\tif (!userId) {\n\t\tuserId = String(authUserId);\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(getUserFollowedTC(userId));\n\t}, [dispatch, userId]);\n\n\tuseEffect(() => {\n\t\tdispatch(setUserProfileTC(userId));\n\t\tdispatch(setStatusProfileTC(userId));\n\t}, [dispatch, userId]);\n\n\tconst followUserHandler = useCallback((userID: number | string) => {\n\t\tdispatch(followUserTC(userID));\n\t}, [dispatch]);\n\n\tconst unfollowUserHandler = useCallback((userID: number | string) => {\n\t\tdispatch(unfollowUserTC(userID));\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className={s.profile}>\n\t\t\t<div className={s.profileHeader}>\n\t\t\t\t{profile?.photos.large\n\t\t\t\t\t? <HeadImg img={profile?.photos.large}/>\n\t\t\t\t\t: <HeadImg img={imag}/>}\n\t\t\t\t<div className={s.headInfo}>\n\t\t\t\t\t<div className={s.avatar}>\n\t\t\t\t\t\t<Avatar alt={profile?.fullName}\n\t\t\t\t\t\t\t\tsrc={profile?.photos.small}\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\t\t\theight: 100,\n\t\t\t\t\t\t\t\t\tborder: '4px solid white',\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\ttop: '-85px',\n\t\t\t\t\t\t\t\t\tleft: '25px'\n\t\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={s.info}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>{profile?.fullName}</h4>\n\t\t\t\t\t\t\t<ProfileStatus status={status}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FollowButton followed={followed}\n\t\t\t\t\t\t\t\t\t\t  followUserHandler={followUserHandler}\n\t\t\t\t\t\t\t\t\t\t  unfollowUserHandler={unfollowUserHandler}\n\t\t\t\t\t\t\t\t\t\t  userId={userId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={s.profileContent}>\n\t\t\t\t<div className={s.about}>\n\t\t\t\t\t<About aboutMe={profile?.aboutMe}/>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.posts}>\n\t\t\t\t\t<MyPosts avatar={profile?.photos.small} name={profile?.fullName}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});","import React from 'react';\nimport {Route, Routes} from 'react-router-dom';\nimport {Users} from '../Users/Users';\nimport {Navbar} from '../Navbar/Navbar';\nimport {Profile} from '../Profile/Profile';\nimport s from './Main.module.scss';\n\nexport const Main = React.memo(() => {\n\treturn (\n\t\t<main className={s.main}>\n\t\t\t<div className={s.nav}>\n\t\t\t\t<Navbar/>\n\t\t\t</div>\n\t\t\t<div className={s.content}>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path='profile' element={<Profile/>}>\n\t\t\t\t\t\t<Route path=':userId' element={<Profile/>}/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={'users'} element={<Users/>}/>\n\t\t\t\t\t<Route path='*' element={<div>404</div>}/>\n\t\t\t\t\t<Route path={'social-network'} element={<Users/>}/>\n\t\t\t\t\t<Route path={'/'} element={<Users/>}/>\n\t\t\t\t</Routes>\n\t\t\t</div>\n\n\t\t</main>\n\t);\n});\n\n\n","import * as React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppErrorType, setAppError} from '../../app/app-reducer';\nimport {AppStateType} from '../../app/redux-store';\n\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function (\n\tprops: React.PropsWithChildren<AlertProps>,\n\tref: React.ForwardedRef<HTMLDivElement>,\n): JSX.Element {\n\treturn <MuiAlert elevation={6} ref={ref} variant='filled' {...props} />;\n});\n\nexport function ErrorSnackbar() {\n\tconst dispatch = useDispatch();\n\tconst error = useSelector<AppStateType, AppErrorType>(state => state.app.error);\n\tconst isOpen = error !== null;\n\n\tconst handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tdispatch(setAppError(null));\n\t};\n\n\treturn (\n\t\t<Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}\n\t\t\t\t  anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}>\n\t\t\t<Alert onClose={handleClose} severity='error' sx={{width: '100%'}}>\n\t\t\t\t{error}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\n\t);\n}\n\n","import * as Yup from 'yup';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {loginTC} from '../auth-reducer';\nimport {Field, Form, Formik} from 'formik';\nimport s from './LoginForm.module.scss';\nimport {AppStateType} from '../../../app/redux-store';\nimport {RequestStatusType} from '../../../app/app-reducer';\n\ntype LoginFormType = {\n\temail: string,\n\tpassword: string,\n\trememberMe: boolean\n};\nconst validationSchema = Yup.object({\n\temail: Yup.string().email('Invalid email address').required('Required'),\n\tpassword: Yup.string()\n\t\t.required('No password provided')\n\t\t.min(8, 'Password is too short - should be 8 chars minimum.')\n\t\t.matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n});\nexport const LoginForm = () => {\n\tconst dispatch = useDispatch();\n\tconst appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus);\n\n\tconst loginHandler = (email: string, password: string, rememberMe: boolean) => {\n\t\tdispatch(loginTC(email, password, rememberMe));\n\t};\n\tconst submit = (values: LoginFormType, {setSubmitting}: { setSubmitting: (setSubmitting: boolean) => void }) => {\n\t\tloginHandler(values.email, values.password, values.rememberMe);\n\t\tsetSubmitting(false);\n\t};\n\n\treturn <div>\n\t\t<Formik\n\t\t\tinitialValues={{email: '', password: '', rememberMe: false}}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tonSubmit={submit}\n\t\t>\n\t\t\t{\n\t\t\t\t({isSubmitting}) => (\n\t\t\t\t\t<Form className={s.loginForm}>\n\t\t\t\t\t\t<Field name='email' type='email' placeholder={'Email'}/>\n\n\n\t\t\t\t\t\t<Field name='password' type='password' placeholder={'Password'}/>\n\n\n\t\t\t\t\t\t<div className={s.remember}>\n\t\t\t\t\t\t\t<div><Field name='rememberMe' type='checkbox'/></div>\n\t\t\t\t\t\t\t<div><label htmlFor='rememberMe'>Remember me</label></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button className={s.loginBtn} type='submit' disabled={appStatus === 'loading'}>Login</button>\n\t\t\t\t\t</Form>)\n\t\t\t}\n\t\t</Formik>\n\t</div>;\n};","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport s from './Login.module.scss';\nimport {LoginForm} from './LoginForm/LoginForm';\nimport {AppStateType} from '../../app/redux-store';\nimport {RequestStatusType} from '../../app/app-reducer';\n\nexport const Login = React.memo(() => {\n\tconst appStatus = useSelector<AppStateType, RequestStatusType>(state => state.app.appStatus);\n\treturn (\n\t\tappStatus === 'loading' ? <></>\n\t\t\t:\n\t\t\t<div className={s.login}>\n\t\t\t\t<h1>Login into your account</h1>\n\t\t\t\t<LoginForm/>\n\t\t\t</div>\n\t);\n});\n\n","import {useEffect} from 'react';\nimport './App.module.scss';\nimport s from './App.module.scss';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppStateType} from './redux-store';\nimport {Header} from '../features/Header/Header';\nimport {Main} from '../features/Main/Main';\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar';\nimport {getAuthUserDataTC} from '../features/Login/auth-reducer';\nimport {Login} from '../features/Login/Login';\n\nexport const App = () => {\n\tconst dispatch = useDispatch();\n\tconst appInitialization = useSelector<AppStateType, boolean>(state => state.app.initialization);\n\n\tuseEffect(() => {\n\t\tdispatch(getAuthUserDataTC());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className={s.app}>\n\t\t\t<ErrorSnackbar/>\n\t\t\t{appInitialization\n\t\t\t\t? <>\n\t\t\t\t\t<Header/>\n\t\t\t\t\t<Main/>\n\t\t\t\t</>\n\t\t\t\t: <>\n\t\t\t\t\t<Login/>\n\t\t\t\t</>}\n\n\t\t</div>\n\n\t);\n};\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\tgetCLS(onPerfEntry);\n\t\tgetFID(onPerfEntry);\n\t\tgetFCP(onPerfEntry);\n\t\tgetLCP(onPerfEntry);\n\t\tgetTTFB(onPerfEntry);\n\t});\n  }\n};\n\nexport default reportWebVitals;\n","import './index.scss';\nimport {store} from './app/redux-store';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2bhSD\",\"profileHeader\":\"Profile_profileHeader__3SFge\",\"headInfo\":\"Profile_headInfo__S7XWr\",\"avatar\":\"Profile_avatar__3EgOt\",\"info\":\"Profile_info__1IsRk\",\"profileContent\":\"Profile_profileContent__3YG9w\",\"about\":\"Profile_about__YHcuh\",\"posts\":\"Profile_posts__34jW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"UsersSearchForm_searchForm__14s5Z\",\"inputBlock\":\"UsersSearchForm_inputBlock__2-Nk8\",\"searchBtn\":\"UsersSearchForm_searchBtn__10KSX\",\"icon\":\"UsersSearchForm_icon__2zzXz\",\"selectBlock\":\"UsersSearchForm_selectBlock__3WXoG\",\"select\":\"UsersSearchForm_select__36IBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22rC9\",\"container\":\"Header_container__2bcQR\",\"title\":\"Header_title__2UK3R\",\"loginInfo\":\"Header_loginInfo__12Qmf\",\"logoutBtn\":\"Header_logoutBtn__3dOFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__1j3HN\",\"span\":\"ProfileStatus_span__2LAS-\",\"noStatus\":\"ProfileStatus_noStatus__3-4mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__nB4Rk\",\"searchBlock\":\"Users_searchBlock__1Qm7o\",\"pagination\":\"Users_pagination__1MrqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__RW2mG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2o7U5\",\"postForm\":\"MyPosts_postForm__amRnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1DGW4\",\"nav\":\"Main_nav__3Omg5\",\"content\":\"Main_content__3XygP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__3VhNT\",\"remember\":\"LoginForm_remember__1yzVo\",\"loginBtn\":\"LoginForm_loginBtn__2jpEX\"};"],"sourceRoot":""}